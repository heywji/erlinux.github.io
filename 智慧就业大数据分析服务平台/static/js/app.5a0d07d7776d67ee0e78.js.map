{"version":3,"sources":["webpack:///./src/App.vue?d94d","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/HelloWorld.vue?ed9e","webpack:///./src/components/HelloWorld.vue","webpack:///src/components/HelloWorld.vue","webpack:///src/components/pages/index.vue","webpack:///./src/components/pages/index.vue?c737","webpack:///./src/components/pages/index.vue","webpack:///src/components/pages/test.vue","webpack:///./src/components/pages/test.vue?2fcb","webpack:///./src/components/pages/test.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./node_modules/echarts/map/json/china.json"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","components_HelloWorld","_vm","staticClass","_v","_s","msg","_m","href","target","src_components_HelloWorld","HelloWorld_normalizeComponent","data","formatLargeNumber","num","toFixed","mydata","value","randomData","Math","round","random","monthArray","geoValue","pages","components","ICountUp","countup_umd_min_default","a","delay","endVal","options","useEasing","useGrouping","separator","decimal","prefix","suffix","total","indexData","datalist","ranking","area","nValue","category","categoryid","subCategorySaleData","province","categorySale","monthCategoryData","前端工程师","移动端工程师","后端工程师","运维工程师","categoryClassifyData","categoryName","provinceSale","methods","drawChart","element","document","getElementById","$echarts","init","setOption","xAxis","type","yAxis","series","changeData","pieChartSeries2","radius","center","pieData","multiChartOption","push","multiChart","drawMapChart","registerMap","json_china_default","myChart","optionMap","title","text","subtext","x","textStyle","color","tooltip","trigger","visualMap","show","y","splitList","start","end","mapType","roam","label","normal","emphasis","chinaConfigure","$refs","myEchart","window","onresize","resize","backgroundColor","dataRange","min","max","realtime","calculable","geo","map","itemStyle","borderColor","shadowOffsetX","shadowOffsetY","shadowBlur","borderWidth","shadowColor","inRange","coordinateSystem","symbolSize","val","formatter","position","geoIndex","drawMultiChart2","_option","JSON","parse","stringify_default","geoCoordMap","上海","新疆","甘肃","总部","北京","江苏","广西","江西","安徽","内蒙古","黑龙江","天津","山西","广东","四川","西藏","云南","浙江","湖北","辽宁","山东","海南","河北","福建","青海","陕西","贵州","河南","重庆","宁夏","吉林","湖南","convertData2","originData","res","i","length","geoCoord","concat","parseInt","option","top","left","axisPointer","params","grid","width","height","gridIndex","axisLabel","forEach","item","defineProperty_default","areaColor","seriesName","sort","b","slice","showEffectOn","rippleEffect","brushType","hoverAnimation","zlevel","xAxisIndex","yAxisIndex","c","markPoint","z","onReady","instance","CountUp","getCategoryData","axios_default","get","then","drawPieChart","percent","selectedMode","pieChart","drawMultiCategoryPieChart","right","bottom","multiPieChart","drawBarChart","legend","toolbox","feature","magicType","saveAsImage","barChart","drawCategorybyMonth","_this","axisValue","containLabel","stack","categoryChart","getOption","timer","setInterval","dispatchAction","getClassifyData","groupby","result","formatData","sale","_result$push","find","m","_this2","sales","quantity","unitprice","replace","amount","month","orderdate","split","categoryTemp","subcategory","productid","undefined","formatMonthCategoryData","items","itemitem","deptdept","dept","console","log","getbarData","index","getCategoryClassifyData","subCategorySale","dest","ai","categoryItem","product","j","dj","mounted","components_pages","_l","key","on","ready","ref","staticStyle","cellpadding","cellspacing","click","$event","tdSelect","yValue","src_components_pages","pages_normalizeComponent","test","海门","鄂尔多斯","招远","舟山","齐齐哈尔","盐城","赤峰","青岛","乳山","金昌","泉州","莱西","日照","胶南","南通","拉萨","云浮","梅州","文登","攀枝花","威海","承德","厦门","汕尾","潮州","丹东","太仓","曲靖","烟台","福州","瓦房店","即墨","抚顺","玉溪","张家口","阳泉","莱州","湖州","汕头","昆山","宁波","湛江","揭阳","荣成","连云港","葫芦岛","常熟","东莞","河源","淮安","泰州","南宁","营口","惠州","江阴","蓬莱","韶关","嘉峪关","广州","延安","太原","清远","中山","昆明","寿光","盘锦","长治","深圳","珠海","宿迁","咸阳","铜川","平度","佛山","海口","江门","章丘","肇庆","大连","临汾","吴江","石嘴山","沈阳","苏州","茂名","嘉兴","长春","胶州","银川","张家港","三门峡","锦州","南昌","柳州","三亚","自贡","阳江","泸州","西宁","宜宾","呼和浩特","成都","大同","镇江","桂林","张家界","宜兴","北海","西安","金坛","东营","牡丹江","遵义","绍兴","扬州","常州","潍坊","台州","南京","滨州","贵阳","无锡","本溪","克拉玛依","渭南","马鞍山","宝鸡","焦作","句容","徐州","衡水","包头","绵阳","乌鲁木齐","枣庄","杭州","淄博","鞍山","溧阳","库尔勒","安阳","开封","济南","德阳","温州","九江","邯郸","临安","兰州","沧州","临沂","南充","富阳","泰安","诸暨","郑州","哈尔滨","聊城","芜湖","唐山","平顶山","邢台","德州","济宁","荆州","宜昌","义乌","丽水","洛阳","秦皇岛","株洲","石家庄","莱芜","常德","保定","湘潭","金华","岳阳","长沙","衢州","廊坊","菏泽","合肥","武汉","大庆","convertData","sublink","zoom","scaleLimit","bmap","mapStyle","styleJson","featureType","elementType","stylers","visibility","d","pages_test","components_pages_test","test_normalizeComponent","Vue","use","Router","router","routes","path","component","HelloWorld","echarts","require","config","productionTip","prototype","el","App","template","module","exports","features","geometry","coordinates","encodeOffsets","properties","cp","childNum","UTF8Encoding"],"mappings":"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AAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,OAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,OAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,OAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,MAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,KACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,MAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,MAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,MAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,MAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,KAAA,KAAAkB,MAAA,MACAlB,K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","file":"static/js/app.5a0d07d7776d67ee0e78.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-236c42a9\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-236c42a9\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-236c42a9\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\nbody{\n/*background: url(\"~@/assets/images/bg.png\") 0 0 / 100% 100% no-repeat;*/\nbackground: url(\"./assets/images/background.png\") 0 0 / 100% 100% no-repeat;\n}\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_vm._v(\" \"),_c('h2',[_vm._v(\"Essential Links\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('h2',[_vm._v(\"Ecosystem\")]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://vuejs.org\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Core Docs\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://forum.vuejs.org\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Forum\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://chat.vuejs.org\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Community Chat\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://twitter.com/vuejs\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Twitter\\n      \")])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"http://vuejs-templates.github.io/webpack/\",\"target\":\"_blank\"}},[_vm._v(\"\\n        Docs for This Template\\n      \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"http://router.vuejs.org/\",\"target\":\"_blank\"}},[_vm._v(\"\\n        vue-router\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"http://vuex.vuejs.org/\",\"target\":\"_blank\"}},[_vm._v(\"\\n        vuex\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"http://vue-loader.vuejs.org/\",\"target\":\"_blank\"}},[_vm._v(\"\\n        vue-loader\\n      \")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/awesome-vue\",\"target\":\"_blank\"}},[_vm._v(\"\\n        awesome-vue\\n      \")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2a52e12a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2a52e12a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2a52e12a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2a52e12a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <h2>Essential Links</h2>\n    <ul>\n      <li>\n        <a href=\"https://vuejs.org\" target=\"_blank\">\n          Core Docs\n        </a>\n      </li>\n      <li>\n        <a href=\"https://forum.vuejs.org\" target=\"_blank\">\n          Forum\n        </a>\n      </li>\n      <li>\n        <a href=\"https://chat.vuejs.org\" target=\"_blank\">\n          Community Chat\n        </a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/vuejs\" target=\"_blank\">\n          Twitter\n        </a>\n      </li>\n      <br />\n      <li>\n        <a href=\"http://vuejs-templates.github.io/webpack/\" target=\"_blank\">\n          Docs for This Template\n        </a>\n      </li>\n    </ul>\n    <h2>Ecosystem</h2>\n    <ul>\n      <li>\n        <a href=\"http://router.vuejs.org/\" target=\"_blank\">\n          vue-router\n        </a>\n      </li>\n      <li>\n        <a href=\"http://vuex.vuejs.org/\" target=\"_blank\">\n          vuex\n        </a>\n      </li>\n      <li>\n        <a href=\"http://vue-loader.vuejs.org/\" target=\"_blank\">\n          vue-loader\n        </a>\n      </li>\n      <li>\n        <a href=\"https://github.com/vuejs/awesome-vue\" target=\"_blank\">\n          awesome-vue\n        </a>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'HelloWorld',\n    data() {\n      return {\n        msg: 'Welcome to Your Vue.js App'\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  h1,\n  h2 {\n    font-weight: normal;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/HelloWorld.vue","<template>\n    <div class=\"page\">\n        <div class=\"header\">\n            <div class=\"title\">\n智慧就业大数据分析服务平台            </div>\n            <div class=\"title-bottom\">\n                <div class=\"bottom-sidebar\"></div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"col-sm-12 col-md-12\">\n                    <div class=\"box-content\">\n                        <div class=\"statistic-box row\">\n                            <div class=\"statistic-item col-md-6\"\n                                 v-for=\"item in indexData\"\n                                 v-bind:key=\"item.name\">\n                                <div class=\"icon-content\">\n                                    <span class=\"iconfont icon-shuju\"></span>\n                                </div>\n                                <div class=\"text-content\">\n                                    <div class=\"text\">\n                                        <span class=\"counter\">\n                                            <ICountUp :delay=\"delay\"\n                                                      :endVal=\"item.value\"\n                                                      :options=\"options\"\n                                                      @ready=\"onReady\" />\n                                        </span>\n                                    </div>\n                                    <div class=\"sub-title\">{{item.name}}</div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n                <div ref=\"multiPieChart\"\n                     style=\"height: 500px\"\n                     class=\"chart\"></div>\n\n                <div class=\"col-md-12\">\n                    <table class=\"table border-table darkblue\"\n                           style=\"width: 100%\"\n                           cellpadding=\"0\"\n                           cellspacing=\"0\">\n                        <tr>\n                            <td class=\"th\"\n                                style=\"width: 90px;\">排名</td>\n                            <td class=\"th\">岗位</td>\n                            <td class=\"th td_right\">\n                                平均月薪\n                            </td>\n                            <td class=\"th td_right\">\n\n                            </td>\n                            <!--<th>二级部门</th>-->\n                        </tr>\n                        <tr v-for=\"(item,index) in datalist\"\n                            :key=\"item.id\">\n                            <td class=\"border_bottom border_left_no\">{{index+1}}</td>\n                            <td class=\"border_bottom enable\"\n                                @click='tdSelect(item)'>\n                                {{item.area}}\n                            </td>\n                            <td class=\"td_right\">\n                                {{item.nValue}}\n                            </td>\n                            <td class=\"td_right\">\n                                {{item.yValue}}\n\n                            </td>\n                        </tr>\n                    </table>\n                    <div ref=\"pieChart\"\n                         class=\"chart\"></div>\n\n                </div>\n\n            </div>\n\n            <div class=\"col-md-8\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12\">\n\n                        <div class=\"box-content\">\n                            <div class=\"caption\">\n                                <div class=\"main\">\n                                    <h2>\n                                        <ICountUp :endVal=\"4785374\" />\n                                        <small class=\"number warning\">12.11%</small></h2>\n                                </div>\n                                <div>\n                                    <h6>数据仅供参考</h6>\n                                </div>\n                            </div>\n                            <div style=\"height:400px;\"\n                                 id=\"mapContainer\"></div>\n                            <div ref=\"categoryChart\"\n                                 style=\"height: 600px\"\n                                 class=\"chart\"></div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\">\n            <div class=\"bottom-line\"></div>\n\n        </div>\n    </div>\n</template>\n    <script>\nimport axios from \"axios\";\nimport ICountUp from \"vue-countup-v2\";\nimport \"echarts/map/js/china.js\";\nimport chinaJson from \"echarts/map/json/china.json\";\n// import sale from '../../../src/assets/js/sale.json'\nvar Order = \"orderID\";\n//对json进行升序排序函数\nvar asc = function(x, y) {\n    return Number(x[Order]) > Number(y[Order]) ? 1 : -1;\n};\n//对json进行降序排序函数\nvar desc = function(x, y) {\n    return Number(x[Order]) < Number(y[Order]) ? 1 : -1;\n};\n/** 将数值转换为万单位的数值 */\nfunction formatLargeNumber(num) {\n    num = num / 10000;\n    num = num.toFixed(2);\n    return num;\n}\nfunction getXYData(data, property) {\n    var res = [];\n    data.forEach(function(item) {\n        res.push(item[property]);\n    });\n    return res;\n}\n\nvar mydata = [\n    { name: \"北京\", value: \"100\" },\n    { name: \"天津\", value: randomData() },\n    { name: \"上海\", value: randomData() },\n    { name: \"重庆\", value: randomData() },\n    { name: \"河北\", value: randomData() },\n    { name: \"河南\", value: randomData() },\n    { name: \"云南\", value: randomData() },\n    { name: \"辽宁\", value: randomData() },\n    { name: \"黑龙江\", value: randomData() },\n    { name: \"湖南\", value: randomData() },\n    { name: \"安徽\", value: randomData() },\n    { name: \"山东\", value: randomData() },\n    { name: \"新疆\", value: randomData() },\n    { name: \"江苏\", value: randomData() },\n    { name: \"浙江\", value: randomData() },\n    { name: \"江西\", value: randomData() }\n];\n\nfunction renderItem(params, api) {\n    var coords = [\n        [116.7, 39.53],\n        [103.73, 36.03],\n        [112.91, 27.87],\n        [120.65, 28.01],\n        [119.57, 39.95]\n    ];\n    var points = [];\n    for (var i = 0; i < coords.length; i++) {\n        points.push(api.coord(coords[i]));\n    }\n    var color = api.visual(\"color\");\n\n    return {\n        type: \"polygon\",\n        shape: {\n            points: echarts.graphic.clipPointsByRect(points, {\n                x: params.coordSys.x,\n                y: params.coordSys.y,\n                width: params.coordSys.width,\n                height: params.coordSys.height\n            })\n        },\n        style: api.style({\n            fill: color,\n            stroke: echarts.color.lift(color)\n        })\n    };\n}\n\nfunction randomData() {\n    return Math.round(Math.random() * 500);\n}\n\nvar textColor = \"9AA8D4\";\nvar COLORS = [\"#070093\", \"#1c3fbf\", \"#1482e5\", \"#70b4eb\", \"#b4e0f3\", \"#ffffff\"];\nvar monthArray = [\n    \"1月\",\n    \"2月\",\n    \"3月\",\n    \"4月\",\n    \"5月\",\n    \"6月\",\n    \"7月\",\n    \"8月\",\n    \"9月\",\n    \"10月\",\n    \"11月\",\n    \"12月\"\n];\n\nvar geoValue = [\n    {\n        name: \"北京\",\n        value: 599\n    },\n    {\n        name: \"上海\",\n        value: 142\n    },\n    {\n        name: \"黑龙江\",\n        value: 44\n    },\n    {\n        name: \"湖北\",\n        value: 810\n    },\n    {\n        name: \"四川\",\n        value: 453\n    }\n];\n//var convertResult = convertData(geoCoordMap, locValue).slice(0, 4);\n//var convertResult2 = convertData(geoCoordMap, locValue).slice(4, 8);\n\nexport default {\n    name: \"index\",\n    components: {\n        ICountUp\n    },\n\n    data() {\n        return {\n            delay: 0,\n            endVal: 120500,\n            options: {\n                useEasing: true,\n                useGrouping: true,\n                separator: \",\",\n                decimal: \".\",\n                prefix: \"\",\n                suffix: \"\"\n            },\n            total: 100,\n            indexData: [\n                { name: \"当月It岗位平均工资\", value: 16190 },\n                { name: \"对比上月增长\", value: 310 },\n            ],\n            datalist: [\n               { ranking: 1, area: \"后端工程师\", nValue: 16900 },\n                { ranking: 1, area: \"前端工程师\", nValue: 16700 },\n                { ranking: 1, area: \"移动端工程师\", nValue: 15210 },\n                { ranking: 1, area: \"运维工程师\", nValue: 11270 },\n\n            ],\n            //  sale: sale.data.result,\n            category: [\n                {\n                    categoryid: \"1\",\n                    category: \"前端工程师\"\n                },\n                {\n                    categoryid: \"2\",\n                    category: \"后端工程师\"\n                },\n                {\n                    categoryid: \"3\",\n                    category: \"移动端工程师\"\n                },\n                {\n                    categoryid: \"4\",\n                    category: \"运维工程师\"\n                }\n            ],\n\n            subCategorySaleData: [\n                { province: \"广东\", value: 199425 },\n                { province: \"福建\", value: 164133 },\n                { province: \"江苏\", value: 160782 },\n                { province: \"湖南\", value: 280300 },\n                { province: \"北京\", value: 253081 },\n                { province: \"四川\", value: 232221 },\n                { province: \"甘肃\", value: 334846 },\n                { province: \"新疆\", value: 150796 },\n                { province: \"吉林\", value: 139778 },\n                { province: \"海南\", value: 152369 },\n                { province: \"辽宁\", value: 299327 },\n                { province: \"天津\", value: 201057 },\n                { province: \"西藏\", value: 131962 },\n                { province: \"河北\", value: 199834 },\n                { province: \"湖北\", value: 152413 },\n                { province: \"广西\", value: 100364 },\n                { province: \"青海\", value: 140823 },\n                { province: \"上海\", value: 191918 },\n                { province: \"贵州\", value: 94650 },\n                { province: \"陕西\", value: 104321 },\n                { province: \"宁夏\", value: 125371 },\n                { province: \"安徽\", value: 464109 },\n                { province: \"重庆\", value: 111396 },\n                { province: \"云南\", value: 129407 },\n                { province: \"内蒙古\", value: 160949 },\n                { province: \"江西\", value: 113205 },\n                { province: \"山西\", value: 52035 },\n                { province: \"浙江\", value: 128498 },\n                { province: \"山东\", value: 216002 },\n                { province: \"黑龙江\", value: 79891 },\n                { province: \"河南\", value: 54682 }\n            ],\n            categorySale: [\n                {\n                    category: \"前端工程师\",\n                    value: 16700\n                },\n                {\n                    category: \"移动端工程师\",\n                    value: 15210\n                },\n                {\n                    category: \"后端工程师\",\n                    value: 16900\n                },\n                {\n                    category: \"运维工程师\",\n                    value: 11270\n                }\n            ],\n\n            monthCategoryData: {\n                前端工程师: [\n                    11230,\n                    14479,\n                    15916,\n                    14347,\n                    14571,\n                    15726,\n                    15426,\n                    15827,\n                    15038,\n                    15279,\n                    15802,\n                    15005\n                ],\n                移动端工程师: [\n                    13345,\n                    13623,\n                    12325,\n                    13297,\n                    12413,\n                    12577,\n                    13160,\n                    13939,\n                    12022,\n                    12664,\n                    13145,\n                    13329\n                ],\n                后端工程师: [\n                    15057,\n                    14258,\n                    14528,\n                    14123,\n                    15176,\n                    16426,\n                    16864,\n                    15808,\n                    15679,\n                    16051,\n                    16341,\n                    16097\n                ],\n                运维工程师: [\n                    12225,\n                    12123,\n                    11985,\n                    12287,\n                    11883,\n                    12787,\n                    13080,\n                    12199,\n                    11892,\n                    12784,\n                    12015,\n                    11239\n                ]\n            },\n            categoryClassifyData: [\n                {\n                    categoryid: \"1\",\n                    categoryName: \"前端工程师\",\n                    data: [\n                        {\n                            name: \"3K-4.5K\",\n                            value: 3.3\n                        },\n                        {\n                            name: \"4.5K-6K\",\n                            value: 10.7\n                        },\n                        {\n                            name: \"6K-8K\",\n                            value: 12.7\n                        },\n                        {\n                            name: \"8K-10K\",\n                            value: 32.7\n                        },\n                        {\n                            name: \"10K-15K\",\n                            value: 17.9\n                        },\n                        {\n                            name: \"15K-20K\",\n                            value: 15.1\n                        },\n                        {\n                            name: \"20K-30K\",\n                            value: 6.1\n                        }\n\n                    ]\n                },\n                {\n                    categoryid: \"2\",\n                    categoryName: \"后端工程师\",\n                    data: [\n                        {\n                            name: \"3K-4.5K\",\n                            value: 1.2\n                        },\n                        {\n                            name: \"4.5K-6K\",\n                            value: 5.6\n                        },\n                        {\n                            name: \"6K-8K\",\n                            value: 7.8\n                        },\n                        {\n                            name: \"8K-10K\",\n                            value: 24.9\n                        },\n                        {\n                            name: \"10K-15K\",\n                            value: 18.4\n                        },\n                        {\n                            name: \"15K-20K\",\n                            value: 24\n                        },\n                        {\n                            name: \"20K-30K\",\n                            value: 16.8\n                        }\n\n                    ]\n                },\n                {\n                    categoryid: \"3\",\n                    categoryName: \"移动端工程师\",\n                    data: [\n                        {\n                            name: \"3K-4.5K\",\n                            value: 1.5\n                        },\n                        {\n                            name: \"4.5K-6K\",\n                            value: 8.3\n                        },\n                        {\n                            name: \"6K-8K\",\n                            value: 7.9\n                        },\n                        {\n                            name: \"8K-10K\",\n                            value: 17\n                        },\n                        {\n                            name: \"10K-15K\",\n                            value: 25.8\n                        },\n                        {\n                            name: \"15K-20K\",\n                            value: 18.1\n                        },\n                        {\n                            name: \"20K-30K\",\n                            value: 20.5\n                        }\n\n                    ]\n                },\n                {\n                    categoryid: \"4\",\n                    categoryName: \"运维工程师\",\n                    data: [\n                        {\n                            name: \"3K-4.5K\",\n                            value: 4.6\n                        },\n                        {\n                            name: \"4.5K-6K\",\n                            value: 14.1\n                        },\n                        {\n                            name: \"6K-8K\",\n                            value: 20.8\n                        },\n                        {\n                            name: \"8K-10K\",\n                            value: 12\n                        },\n                        {\n                            name: \"10K-15K\",\n                            value: 23\n                        },\n                        {\n                            name: \"15K-20K\",\n                            value: 11.2\n                        },\n                        {\n                            name: \"20K-30K\",\n                            value: 10.3\n                        }\n\n                    ]\n                }\n            ],\n            provinceSale: [\n                { name: \"安徽\", value: 81924 },\n                { name: \"北京\", value: 740834},\n                { name: \"福建\", value: 127851},\n                { name: \"甘肃\", value: 63797},\n                { name: \"广东\", value: 727525},\n                { name: \"广西\", value: 42419},\n                { name: \"贵州\", value: 13811 },\n                { name: \"海南\", value: 71996 },\n                { name: \"河北\", value: 26542 },\n                { name: \"河南\", value: 28514 },\n                { name: \"黑龙江\", value: 46534 },\n                { name: \"湖北\", value: 198046},\n                { name: \"湖南\", value: 77962},\n                { name: \"吉林\", value: 103217},\n                { name: \"江苏\", value: 201694 },\n                { name: \"江西\", value: 90583 },\n                { name: \"辽宁\", value: 7750},\n                { name: \"内蒙古\", value: 955 },\n                { name: \"宁夏\", value: 27518 },\n                { name: \"青海\", value: 12022 },\n                { name: \"山东\", value: 21800 },\n                { name: \"山西\", value: 16195 },\n                { name: \"陕西\", value: 42725 },\n                { name: \"上海\", value: 803714 },\n                { name: \"四川\", value: 124240 },\n                { name: \"天津\", value: 68654 },\n                { name: \"西藏\", value: 687 },\n                { name: \"新疆\", value: 779 },\n                { name: \"云南\", value: 4189 },\n                { name: \"浙江\", value: 793946 },\n                { name: \"重庆\", value: 216951 }\n            ]\n        };\n    },\n    methods: {\n        drawChart() {\n            // 基于准备好的dom，初始化echarts实例\n            let element = document.getElementById(\"myChart\");\n            if (element == null) return;\n            let myChart = this.$echarts.init(element);\n            let option = {\n                xAxis: {\n                    type: \"category\",\n                    data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n                },\n                yAxis: {\n                    type: \"value\"\n                },\n                series: [\n                    {\n                        data: [820, 932, 901, 934, 1290, 1330, 1320],\n                        type: \"line\"\n                    }\n                ]\n            };\n            myChart.setOption(option);\n        },\n\n        changeData() {\n            var pieChartSeries2 = {\n                name: \"面积模式\",\n                type: \"pie\",\n                radius: [10, 50],\n                center: [\"48%\", \"75%\"],\n                data: pieData[0] //饼图数据赋值\n            };\n            multiChartOption.series.push(pieChartSeries2);\n            this.multiChart.setOption(multiChartOption);\n        },\n        drawMapChart() {\n            //初始化echarts实例\n            this.$echarts.registerMap(\"china\", chinaJson);\n            var myChart = this.$echarts.init(\n                document.getElementById(\"mapChart\")\n            );\n            var optionMap = {\n                title: {\n                    text: \"全国地图大数据\",\n                    subtext: \"\",\n                    x: \"center\",\n                    textStyle: {\n                        color: \"#fff\"\n                    }\n                },\n                tooltip: {\n                    trigger: \"item\"\n                },\n\n                //左侧小导航图标\n                visualMap: {\n                    show: true,\n                    x: \"left\",\n                    y: \"center\",\n                    textStyle: {\n                        color: \"#8fc8f2\"\n                    },\n                    splitList: [\n                        { start: 70, end: 80 },\n                        { start: 50, end: 60 },\n                        { start: 30, end: 40 },\n                        { start: 0, end: 10 }\n                    ],\n                    color: [\n                        \"#85daef\",\n                        \"#74e2ca\",\n                        \"#e6ac53\",\n                        \"#9fb5ea\"\n                    ]\n                },\n\n                //配置属性\n                series: [\n                    {\n                        name: \"数据\",\n                        type: \"map\",\n                        mapType: \"china\",\n                        roam: true,\n                        label: {\n                            normal: {\n                                show: true //省份名称\n                            },\n                            emphasis: {\n                                show: false\n                            }\n                        },\n                        data: mydata //数据\n                    }\n                ]\n            };\n\n            //使用制定的配置项和数据显示图表\n            myChart.setOption(optionMap);\n        },\n        chinaConfigure() {\n            this.$echarts.registerMap(\"china\", chinaJson);\n            let myChart = this.$echarts.init(this.$refs.myEchart);\n            window.onresize = myChart.resize;\n            myChart.setOption({\n                // 进行相关配置\n                backgroundColor: \"transparent\",\n                tooltip: {}, // 鼠标移到图里面的浮动提示框\n                dataRange: {\n                    show: false,\n                    min: 0,\n                    max: 1000,\n                    text: [\"High\", \"Low\"],\n                    realtime: true,\n                    calculable: true\n                    //  color: ['orangered', 'yellow', 'lightskyblue']\n                },\n\n                geo: {\n                    // 这个是重点配置区\n                    map: \"china\", // 表示中国地图\n                    roam: true,\n                    label: {\n                        normal: {\n                            show: true, // 是否显示对应地名\n                            textStyle: {\n                                color: \"rgba(0,0,0,0.4)\"\n                            }\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            borderColor: \"rgba(0, 0, 0, 0.2)\",\n                            //    areaColor: \"#5698d9\",\n                            color: \"#5698d9\"\n                        },\n                        emphasis: {\n                            //    areaColor: \"#5698d9\",\n                            shadowOffsetX: 0,\n                            shadowOffsetY: 0,\n                            shadowBlur: 20,\n                            borderWidth: 0,\n                            shadowColor: \"rgba(0, 0, 0, 0.5)\"\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: \"#8fc8f2\",\n                                shadowBlur: 10,\n                                shadowColor: \"#333\"\n                            }\n                        }\n                    }\n                },\n\n                visualMap: {\n                    min: 0,\n                    max: 200,\n                    calculable: true,\n                    inRange: {\n                        color: [\"#50a3ba\", \"#eac736\", \"#d94e5d\"]\n                    },\n                    textStyle: {\n                        color: \"#fff\"\n                    }\n                },\n\n                series: [\n                    {\n                        type: \"scatter\",\n                        coordinateSystem: \"geo\" // 对应上方配置\n                    },\n                    {\n                        name: \"pm2.5\",\n                        type: \"scatter\",\n                        coordinateSystem: \"bmap\",\n                        data: [{ name: \"上海\", value: [121.48, 31.22, 25] }],\n                        symbolSize: function(val) {\n                            return val[2] / 10;\n                        },\n                        label: {\n                            normal: {\n                                formatter: \"{b}\",\n                                position: \"right\",\n                                show: false\n                            },\n                            emphasis: {\n                                show: true\n                            }\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: \"#ddb926\"\n                            }\n                        }\n                    },\n                    {\n                        name: \"启动次数\", // 浮动框的标题\n                        type: \"map\",\n                        geoIndex: 0,\n                        data: geoValue,\n                        itemStyle: {\n                            normal: {\n                                //  areaColor: COLORS[2]\n                                //   color: '#fff'\n                            }\n                        }\n                    }\n                ]\n            });\n        },\n        drawMultiChart2() {\n            var that = this;\n            var categorySale = this.categorySale;\n\n            var provinceSale = JSON.parse(JSON.stringify(this.provinceSale));\n            var data = [\n                { name: \"海门\", value: 9 },\n                { name: \"鄂尔多斯\", value: 12 },\n                { name: \"招远\", value: 12 },\n                { name: \"舟山\", value: 12 },\n                { name: \"齐齐哈尔\", value: 14 },\n                { name: \"盐城\", value: 15 },\n                { name: \"赤峰\", value: 16 },\n                { name: \"青岛\", value: 18 },\n                { name: \"乳山\", value: 18 },\n                { name: \"金昌\", value: 19 },\n                { name: \"泉州\", value: 21 },\n                { name: \"莱西\", value: 21 },\n                { name: \"日照\", value: 21 },\n                { name: \"胶南\", value: 22 },\n                { name: \"南通\", value: 23 },\n                { name: \"拉萨\", value: 24 },\n                { name: \"云浮\", value: 24 },\n                { name: \"梅州\", value: 25 },\n                { name: \"文登\", value: 25 },\n                { name: \"上海\", value: 25 },\n                { name: \"攀枝花\", value: 25 },\n                { name: \"威海\", value: 25 },\n                { name: \"承德\", value: 25 },\n                { name: \"厦门\", value: 26 },\n                { name: \"汕尾\", value: 26 },\n                { name: \"潮州\", value: 26 },\n                { name: \"丹东\", value: 27 },\n                { name: \"太仓\", value: 27 },\n                { name: \"曲靖\", value: 27 },\n                { name: \"烟台\", value: 28 },\n                { name: \"福州\", value: 29 },\n                { name: \"瓦房店\", value: 30 },\n                { name: \"即墨\", value: 30 },\n                { name: \"抚顺\", value: 31 },\n                { name: \"玉溪\", value: 31 },\n                { name: \"张家口\", value: 31 },\n                { name: \"阳泉\", value: 31 },\n                { name: \"莱州\", value: 32 },\n                { name: \"湖州\", value: 32 },\n                { name: \"汕头\", value: 32 },\n                { name: \"昆山\", value: 33 },\n                { name: \"宁波\", value: 33 },\n                { name: \"湛江\", value: 33 },\n                { name: \"揭阳\", value: 34 },\n                { name: \"荣成\", value: 34 },\n                { name: \"连云港\", value: 35 },\n                { name: \"葫芦岛\", value: 35 },\n                { name: \"常熟\", value: 36 },\n                { name: \"东莞\", value: 36 },\n                { name: \"河源\", value: 36 },\n                { name: \"淮安\", value: 36 },\n                { name: \"泰州\", value: 36 },\n                { name: \"南宁\", value: 37 },\n                { name: \"营口\", value: 37 },\n                { name: \"惠州\", value: 37 },\n                { name: \"江阴\", value: 37 },\n                { name: \"蓬莱\", value: 37 },\n                { name: \"韶关\", value: 38 },\n                { name: \"嘉峪关\", value: 38 },\n                { name: \"广州\", value: 38 },\n                { name: \"延安\", value: 38 },\n                { name: \"太原\", value: 39 },\n                { name: \"清远\", value: 39 },\n                { name: \"中山\", value: 39 },\n                { name: \"昆明\", value: 39 },\n                { name: \"寿光\", value: 40 },\n                { name: \"盘锦\", value: 40 },\n                { name: \"长治\", value: 41 },\n                { name: \"深圳\", value: 41 },\n                { name: \"珠海\", value: 42 },\n                { name: \"宿迁\", value: 43 },\n                { name: \"咸阳\", value: 43 },\n                { name: \"铜川\", value: 44 },\n                { name: \"平度\", value: 44 },\n                { name: \"佛山\", value: 44 },\n                { name: \"海口\", value: 44 },\n                { name: \"江门\", value: 45 },\n                { name: \"章丘\", value: 45 },\n                { name: \"肇庆\", value: 46 },\n                { name: \"大连\", value: 47 },\n                { name: \"临汾\", value: 47 },\n                { name: \"吴江\", value: 47 },\n                { name: \"石嘴山\", value: 49 },\n                { name: \"沈阳\", value: 50 },\n                { name: \"苏州\", value: 50 },\n                { name: \"茂名\", value: 50 },\n                { name: \"嘉兴\", value: 51 },\n                { name: \"长春\", value: 51 },\n                { name: \"胶州\", value: 52 },\n                { name: \"银川\", value: 52 },\n                { name: \"张家港\", value: 52 },\n                { name: \"三门峡\", value: 53 },\n                { name: \"锦州\", value: 54 },\n                { name: \"南昌\", value: 54 },\n                { name: \"柳州\", value: 54 },\n                { name: \"三亚\", value: 54 },\n                { name: \"自贡\", value: 56 },\n                { name: \"吉林\", value: 56 },\n                { name: \"阳江\", value: 57 },\n                { name: \"泸州\", value: 57 },\n                { name: \"西宁\", value: 57 },\n                { name: \"宜宾\", value: 58 },\n                { name: \"呼和浩特\", value: 58 },\n                { name: \"成都\", value: 58 },\n                { name: \"大同\", value: 58 },\n                { name: \"镇江\", value: 59 },\n                { name: \"桂林\", value: 59 },\n                { name: \"张家界\", value: 59 },\n                { name: \"宜兴\", value: 59 },\n                { name: \"北海\", value: 60 },\n                { name: \"西安\", value: 61 },\n                { name: \"金坛\", value: 62 },\n                { name: \"东营\", value: 62 },\n                { name: \"牡丹江\", value: 63 },\n                { name: \"遵义\", value: 63 },\n                { name: \"绍兴\", value: 63 },\n                { name: \"扬州\", value: 64 },\n                { name: \"常州\", value: 64 },\n                { name: \"潍坊\", value: 65 },\n                { name: \"重庆\", value: 66 },\n                { name: \"台州\", value: 67 },\n                { name: \"南京\", value: 67 },\n                { name: \"滨州\", value: 70 },\n                { name: \"贵阳\", value: 71 },\n                { name: \"无锡\", value: 71 },\n                { name: \"本溪\", value: 71 },\n                { name: \"克拉玛依\", value: 72 },\n                { name: \"渭南\", value: 72 },\n                { name: \"马鞍山\", value: 72 },\n                { name: \"宝鸡\", value: 72 },\n                { name: \"焦作\", value: 75 },\n                { name: \"句容\", value: 75 },\n                { name: \"北京\", value: 79 },\n                { name: \"徐州\", value: 79 },\n                { name: \"衡水\", value: 80 },\n                { name: \"包头\", value: 80 },\n                { name: \"绵阳\", value: 80 },\n                { name: \"乌鲁木齐\", value: 84 },\n                { name: \"枣庄\", value: 84 },\n                { name: \"杭州\", value: 84 },\n                { name: \"淄博\", value: 85 },\n                { name: \"鞍山\", value: 86 },\n                { name: \"溧阳\", value: 86 },\n                { name: \"库尔勒\", value: 86 },\n                { name: \"安阳\", value: 90 },\n                { name: \"开封\", value: 90 },\n                { name: \"济南\", value: 92 },\n                { name: \"德阳\", value: 93 },\n                { name: \"温州\", value: 95 },\n                { name: \"九江\", value: 96 },\n                { name: \"邯郸\", value: 98 },\n                { name: \"临安\", value: 99 },\n                { name: \"兰州\", value: 99 },\n                { name: \"沧州\", value: 100 },\n                { name: \"临沂\", value: 103 },\n                { name: \"南充\", value: 104 },\n                { name: \"天津\", value: 105 },\n                { name: \"富阳\", value: 106 },\n                { name: \"泰安\", value: 112 },\n                { name: \"诸暨\", value: 112 },\n                { name: \"郑州\", value: 113 },\n                { name: \"哈尔滨\", value: 114 },\n                { name: \"聊城\", value: 116 },\n                { name: \"芜湖\", value: 117 },\n                { name: \"唐山\", value: 119 },\n                { name: \"平顶山\", value: 119 },\n                { name: \"邢台\", value: 119 },\n                { name: \"德州\", value: 120 },\n                { name: \"济宁\", value: 120 },\n                { name: \"荆州\", value: 127 },\n                { name: \"宜昌\", value: 130 },\n                { name: \"义乌\", value: 132 },\n                { name: \"丽水\", value: 133 },\n                { name: \"洛阳\", value: 134 },\n                { name: \"秦皇岛\", value: 136 },\n                { name: \"株洲\", value: 143 },\n                { name: \"石家庄\", value: 147 },\n                { name: \"莱芜\", value: 148 },\n                { name: \"常德\", value: 152 },\n                { name: \"保定\", value: 153 },\n                { name: \"湘潭\", value: 154 },\n                { name: \"金华\", value: 157 },\n                { name: \"岳阳\", value: 169 },\n                { name: \"长沙\", value: 175 },\n                { name: \"衢州\", value: 177 },\n                { name: \"廊坊\", value: 193 },\n                { name: \"菏泽\", value: 194 },\n                { name: \"合肥\", value: 229 },\n                { name: \"武汉\", value: 273 },\n                { name: \"大庆\", value: 279 }\n            ];\n            var geoCoordMap = {\n                上海: [121.4648, 31.2891],\n                新疆: [87.9236, 43.5883],\n                甘肃: [103.5901, 36.3043],\n                总部: [70.4551, 50.2539],\n                北京: [116.4551, 40.2539],\n                江苏: [118.8062, 31.9208],\n                广西: [108.479, 23.1152],\n                江西: [116.0046, 28.6633],\n                安徽: [117.29, 32.0581],\n                内蒙古: [111.4124, 40.4901],\n                黑龙江: [127.9688, 45.368],\n                天津: [117.4219, 39.4189],\n                山西: [112.3352, 37.9413],\n                广东: [113.5107, 23.2196],\n                四川: [103.9526, 30.7617],\n                西藏: [91.1865, 30.1465],\n                云南: [102.9199, 25.4663],\n                浙江: [119.5313, 29.8773],\n                湖北: [114.3896, 30.6628],\n                辽宁: [123.1238, 42.1216],\n                山东: [117.1582, 36.8701],\n                海南: [110.3893, 19.8516],\n                河北: [114.4995, 38.1006],\n                福建: [119.4543, 25.9222],\n                青海: [101.4038, 36.8207],\n                陕西: [109.1162, 34.2004],\n                贵州: [106.6992, 26.7682],\n                河南: [113.4668, 34.6234],\n                重庆: [107.7539, 30.1904],\n                宁夏: [106.3586, 38.1775],\n                吉林: [125.8154, 44.2584],\n                湖南: [113.0823, 28.2568]\n            };\n            var convertData2 = function(originData) {\n                var res = [];\n                var data = JSON.parse(JSON.stringify(originData));\n                for (var i = 0; i < data.length; i++) {\n                    var geoCoord = geoCoordMap[data[i].name];\n                    if (geoCoord) {\n                        res.push({\n                            name: data[i].name,\n                            value: geoCoord.concat(\n                                parseInt(formatLargeNumber(data[i].value))\n                            )\n                        });\n                    }\n                }\n                return res;\n            };\n            this.$echarts.registerMap(\"china\", chinaJson);\n            var myChart = this.$echarts.init(\n                document.getElementById(\"mapContainer\")\n            );\n            //每次窗口大小改变的时候都会触发onresize事件，这个时候我们将echarts对象的尺寸赋值给窗口的大小这个属性，从而实现图表对象与窗口对象的尺寸一致的情况\n            window.onresize = myChart.resize;\n            var option = {\n                backgroundColor: \"transparent\",\n                title: {\n                    top: 20,\n                    left: 100,\n                    text: \"需求人数地域分布\",\n                    subtext: \"\",\n                    x: \"left\",\n                    textStyle: {\n                        color: \"#ccc\"\n                    }\n                },\n                tooltip: {\n                    trigger: \"axis\",\n                    axisPointer: {\n                        // 坐标轴指示器，坐标轴触发有效\n                        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n                    },\n                    formatter: function(params) {\n                        if (typeof params.value[2] == \"undefined\") {\n                            //return params.name + ' : ' + params.value;\n                        } else {\n                            //只有数据不为空才显示\n                            return params.name + \" : \" + params.value[2];\n                        }\n                    }\n                },\n\n                visualMap: {\n                    //左侧小导航图标\n                    show: true,\n                    x: \"left\",\n                    y: \"center\",\n                    top: \"260\",\n                    textStyle: {\n                        color: \"#8fc8f2\"\n                    },\n                    splitList: [\n                        { start: 200 },\n                        { start: 150, end: 200 },\n                        { start: 100, end: 150 },\n                        { start: 50, end: 100 },\n                        { start: 0, end: 50 }\n                    ],\n                    color: [\n                        \"#9fb5ea\",\n                        \"#F4E925\",\n                        \"#85daef\",\n                        \"#74e2ca\",\n                        \"#e6ac53\"\n                    ]\n                },\n                //布局\n                grid: [\n                    { x: \"55%\", y: \"5%\", width: \"40%\", height: \"90%\" }\n                    //  { x: '50%', bottom: '5%', width: '40%', height: '25%' }\n                ],\n                xAxis: [\n                    {\n                        gridIndex: 0,\n                        type: \"value\",\n                        axisLabel: {\n                            show: true\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        gridIndex: 0,\n                        type: \"category\",\n\n                        axisLabel: {\n                            show: true,\n                            textStyle: {\n                                color: \"#fff\"\n                            }\n                        },\n                        label: {\n                            normal: {\n                                show: true\n                            }\n                        },\n                        data: (function getXYData() {\n                            var data = provinceSale;\n                            var property = \"name\";\n                            var res = [];\n                            data.forEach(function(item) {\n                                res.push(item[property]);\n                            });\n                            return res;\n                        })()\n                    }\n                ],\n                tooltip: {\n                    trigger: \"item\"\n                },\n                //布局e\n                geo: {\n                    show: true,\n                    map: \"china\",\n                    //  zoom: 1,  //地图绽放\n                    //  scaleLimit: 2,\n                    label: {\n                        normal: {\n                            show: true,\n                            textStyle: {\n                                color: \"#ccc\"\n                            }\n                        },\n                        emphasis: {\n                            show: false\n                        }\n                    },\n                    roam: true, //是否开启鼠标缩放和平移漫游\n                    itemStyle: {\n                        normal: {\n                            areaColor: \"transparent\",\n                            // borderColor: '#3fdaff',\n                            borderWidth: 1,\n                            shadowColor: \"rgba(63, 218, 255, 0.5)\",\n                            shadowBlur: 30\n                        },\n                        emphasis: {\n                            areaColor: \"#2B91B7\",\n                            color: \"#fff\"\n                        }\n                    }\n                },\n                //调整显示级别\n                layoutCenter: [\"25%\", \"50%\"],\n                layoutSize: 400,\n                series: [\n                    {\n                        name: \"销售额\",\n                        type: \"scatter\",\n                        coordinateSystem: \"geo\",\n                        data: convertData2(provinceSale),\n                        symbolSize: function(val) {\n                            return val[2] / 10;\n                        },\n                        label: {\n                            normal: {\n                                formatter: function(a) {\n                                    return a.value[2] + \"万元\";\n                                },\n                                position: \"right\",\n                                show: false\n                            },\n                            emphasis: {\n                                show: true\n                            }\n                        },\n                        tooltip: {\n                            formatter: function(a) {\n                                return `${a.name} ${a.seriesName}<br/>${a.value[2]}万元`;\n                            }\n                        }\n                    },\n                    {\n                        name: \"销售额前三名\",\n                        type: \"effectScatter\",\n                        coordinateSystem: \"geo\",\n                        data: convertData2(\n                            provinceSale\n                                .sort(function(a, b) {\n                                    return b.value - a.value;\n                                })\n                                .slice(0, 3)\n                        ),\n                        symbolSize: function(val) {\n                            return val[2] / 10;\n                        },\n                        showEffectOn: \"render\",\n                        rippleEffect: {\n                            brushType: \"stroke\"\n                        },\n                        hoverAnimation: true,\n                        label: {\n                            normal: {\n                                formatter: function(a) {\n                                    return a.value[2] + \"万元\";\n                                },\n                                position: \"right\",\n                                show: true\n                            }\n                        },\n                        tooltip: {\n                            formatter: function(a) {\n                                return `${a.name} ${a.seriesName}<br/>${a.value[2]}万元`;\n                            }\n                        },\n                        zlevel: 1\n                    },\n                    /*  {\n                                type: 'pie',\n                                z: 2,\n                                selectedMode: 'single',\n                                radius: [0, '15%'],        //radius确定饼图的大小\n                                center: ['20%', '60%'],    //center来确定饼图中心位置\n                                selectedMode: 'single',\n                                data: categorySale,\n                                label: {\n                                    normal: {\n                                        position: 'inner'\n                                    }\n                                },\n                                labelLine: {\n                                    normal: {\n                                        show: false\n                                    }\n                                },\n                                //显示series中信息，提示框组件\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                                },\n                                itemStyle: {\n                                    emphasis: {\n                                        shadowBlur: 10,\n                                        shadowOffsetX: 0,\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                    }\n                                }\n                            },*/\n                    {\n                        id: \"bar\",\n                        name: \"年销售额按省份\",\n                        type: \"bar\",\n                        xAxisIndex: 0,\n                        yAxisIndex: 0,\n\n                        tooltip: {\n                            formatter: function(a, b, c) {\n                                return `${a.name}<br/>${formatLargeNumber(\n                                    a.value\n                                )}`;\n                            }\n                        },\n                        markPoint: {\n                            data: [\n                                { type: \"max\", name: \"最大值\" },\n                                { type: \"min\", name: \"最小值\" }\n                            ]\n                        },\n\n                        /* itemStyle: {\n                                    //每个柱子的颜色即为colorList数组里的每一项，如果柱子数目多于colorList的长度，则柱子颜色循环使用该数组\n                                    color: function (params) {\n                                        var colorList = ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'];\n                                        return colorList[params.dataIndex];\n                                    }\n                                },*/\n                        z: 2,\n                        data: that.provinceSale\n                    }\n                    /*  {\n                                name: '请假',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 3, 2, 4, 1, 4, 3]\n                            },\n                            {\n                                name: '迟到',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 2, 3, 4, 3, 2, 2]\n                            },\n                            {\n                                name: '早退',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 2, 3, 4, 3, 2, 4]\n                            },\n                            {\n                                name: '调休',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 3, 2, 4, 1, 4, 2]\n                            },\n                            {\n                                name: '加班',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 3, 2, 4, 1, 4, 2]\n                            },\n                            {\n                                name: '旷工',\n                                type: 'bar',\n                                xAxisIndex: 1,\n                                yAxisIndex: 1,\n                                tooltip: {\n                                    trigger: 'item',\n                                    formatter: \"{a} : {c}\"\n                                },\n                                data: [1, 3, 2, 4, 1, 4, 2]\n                            }*/\n                ]\n            };\n            myChart.setOption(option);\n        },\n        onReady: function(instance, CountUp) {\n            return;\n            const that = this;\n            instance.update(that.endVal + 100);\n        },\n        getCategoryData() {\n            axios\n                .get(\n                    \"https://easy-mock.com/mock/5d721076b158cf18134a822b/dashboard/category\"\n                )\n                .then(res => {});\n        },\n        drawPieChart() {\n            var categorySale = this.categorySale;\n            var option = {\n                title: {\n                    text: \"不同岗位的年平均工资分布\",\n                    left: \"center\",\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n\n                tooltip: {\n                    trigger: \"item\",\n                    formatter: function(params) {\n                        return `${params.data.category}\n                                <br/>${params.data.value}(${params.percent}%)`;\n                    }\n                },\n\n                series: [\n                    {\n                        type: \"pie\",\n                        radius: \"50%\",\n                        center: [\"50%\", \"50%\"],\n                        selectedMode: \"single\",\n                        data: categorySale,\n                        label: {\n                            show: true,\n                            formatter: function(res) {\n                                return res.data.category;\n                            }\n                        },\n                        itemStyle: {\n                            emphasis: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n                            }\n                        }\n                    }\n                ]\n            };\n            let myChart = this.$echarts.init(this.$refs.pieChart);\n            window.onresize = myChart.resize;\n            myChart.setOption(option);\n        },\n        drawMultiCategoryPieChart() {\n            var categoryClassifyData = this.categoryClassifyData;\n            var option = {\n\n                tooltip: {\n                    formatter: function(a, b, c) {\n                        return `${a.name}<br/>${\n                            a.value\n                        }`;\n                    }\n                },\n                 title: [{\n                    text: \"前端工程师\",\n                    left: \"15%\",\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n                {\n                    text: \"后端工程师\",\n                    right: \"25%\",\n\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n                {\n                    text: \"移动端工程师\",\n                    left: \"15%\",\n                                         bottom:'10%',\n\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n                {\n                    text: \"运维工程师\",\n                    right: \"25%\",\n                                         bottom:'10%',\n\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                }\n\n\n                ],\n\n                series: [\n                    {\n                        type: \"pie\",\n                        radius: 50,\n                        center: [\"25%\", \"20%\"],\n                        data: categoryClassifyData[0].data,\n\n                        // No encode specified, by default, it is '2012'.\n                    },\n                    {\n                        type: \"pie\",\n                        radius: 50,\n\n                        center: [\"65%\", \"20%\"],\n                        data: categoryClassifyData[1].data\n                    },\n                    {\n                        type: \"pie\",\n                        radius: 50,\n                        center: [\"25%\", \"65%\"],\n                        data: categoryClassifyData[2].data\n                    },\n                    {\n                        type: \"pie\",\n                        radius: 50,\n                        center: [\"65%\", \"65%\"],\n                        data: categoryClassifyData[3].data\n                    }\n                ]\n            };\n            let myChart = this.$echarts.init(this.$refs.multiPieChart);\n            window.onresize = myChart.resize;\n            myChart.setOption(option);\n        },\n        drawBarChart() {\n\n            var option = {\n                color: [\"#3398DB\"],\n                title: {\n                    text: \"月销售额（万）\",\n                    left: \"center\",\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n                tooltip: {\n                    trigger: \"axis\"\n                },\n                legend: {\n                    data: [\"月份\"]\n                },\n                toolbox: {\n                    show: true,\n                    feature: {\n                        magicType: { show: true, type: [\"line\", \"bar\"] },\n                        saveAsImage: { show: true }\n                    }\n                },\n                calculable: true,\n                xAxis: [\n                    {\n                        type: \"category\",\n                        data: monthArray,\n                        axisLabel: {\n                            textStyle: {\n                                color: \"#fff\"\n                            }\n                        }\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: \"value\",\n                        axisLabel: {\n                            textStyle: {\n                                color: \"#fff\"\n                            }\n                        }\n                    }\n                ],\n\n            };\n            let myChart = this.$echarts.init(this.$refs.barChart);\n            window.onresize = myChart.resize;\n            myChart.setOption(option);\n        },\n        drawCategorybyMonth() {\n            var category = this.category;\n            var itemStyle = {\n                normal: {\n                    label: {\n                        formatter: function(a) {\n                            return formatLargeNumber(a.value);\n                        }\n                    }\n                }\n            };\n            var markPoint = {\n                data: [{ type: \"max\", name: \"最大值\" }],\n                itemStyle: itemStyle\n            };\n            var monthCategoryData = this.monthCategoryData;\n            var option = {\n                title: {\n                    text: \"\",\n                    textStyle: {\n                        color: \"#9AA8D4\"\n                    }\n                },\n                tooltip: {\n                    trigger: \"axis\",\n                    axisPointer: {\n                        // 坐标轴指示器，坐标轴触发有效\n                        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n                    },\n\n                    formatter: function(a, b, c) {\n                        return `${a[0].axisValue}<br/>${\n                            a[0].seriesName\n                        }  ${formatLargeNumber(a[0].value)}`;\n                    }\n                },\n                legend: {\n                    left: \"right\",\n                    data: (function getXYData(data, property) {\n                        var data = category;\n                        var property = \"category\";\n                        var res = [];\n                        data.forEach(function(item) {\n                            res.push(item[property]);\n                        });\n\n                        return res;\n                    })(),\n                    textStyle: {\n                        color: textColor\n                    },\n                    selectedMode: \"single\"\n                },\n                grid: {\n                    left: \"3%\",\n                    right: \"4%\",\n                    bottom: \"3%\",\n                    containLabel: true\n                },\n                yAxis: {\n                    type: \"value\",\n                    axisLabel: {\n                        textStyle: {\n                            color: \"#fff\"\n                        }\n                    }\n                },\n                xAxis: {\n                    type: \"category\",\n                    data: monthArray,\n                    axisLabel: {\n                        textStyle: {\n                            color: \"#fff\"\n                        }\n                    }\n                },\n                series: [\n                    {\n                        name: \"前端工程师\",\n                        type: \"bar\",\n                        stack: \"总量\",\n                        label: {\n                            normal: {\n                                show: true,\n                                position: \"insideRight\"\n                            }\n                        },\n                        data: monthCategoryData[\"前端工程师\"],\n                        itemStyle,\n                        markPoint\n                    },\n                    {\n                        name: \"后端工程师\",\n                        type: \"bar\",\n                        stack: \"总量\",\n                        label: {\n                            normal: {\n                                show: true,\n                                position: \"insideRight\"\n                            }\n                        },\n                        data: monthCategoryData[\"后端工程师\"],\n                        itemStyle,\n                        markPoint\n                    },\n                    {\n                        name: \"移动端工程师\",\n                        type: \"bar\",\n                        stack: \"总量\",\n                        label: {\n                            normal: {\n                                show: true,\n                                position: \"insideRight\"\n                            }\n                        },\n                        data: monthCategoryData[\"移动端工程师\"],\n                        itemStyle,\n                        markPoint\n                    },\n                    {\n                        name: \"运维工程师\",\n                        type: \"bar\",\n                        stack: \"总量\",\n                        label: {\n                            normal: {\n                                show: true,\n                                position: \"insideRight\"\n                            }\n                        },\n                        data: monthCategoryData[\"运维工程师\"],\n                        itemStyle,\n                        markPoint\n                    }\n                ]\n            };\n            this.myChart = this.$echarts.init(this.$refs.categoryChart);\n            window.onresize = this.myChart.resize;\n            this.myChart.setOption(option);\n\n            const data = this.myChart.getOption().legend[0].data;\n\n            let i = 0; // 首次总是从0开始的\n            // 开始轮播\n            this.timer = setInterval(() => {\n                //legendUnSelect（取消选中图例）\n                this.myChart.dispatchAction({\n                    type: \"legendUnSelect\",\n                    name: data[i % data.length]\n                });\n                // legendToggleSelect（切换图例的选中状态）\n                this.myChart.dispatchAction({\n                    type: \"legendToggleSelect\",\n                    name: data[++i % data.length]\n                });\n                option.title.text = `2019年${data[i % data.length]}各月需求人数`; //动态设置标题\n                this.myChart.setOption(option);\n            }, 3500);\n        },\n        getClassifyData(groupby) {\n            var sales = this.formatData(this.sale);\n\n            var result = [];\n            var map = {};\n\n            sales.forEach(item => {\n                //var groupby = \"category\";\n                if (!map[item[groupby]]) {\n                    result.push({\n                        [groupby]: item[groupby],\n                        value: item.value\n                        // items: [item]\n                    });\n                    map[item[groupby]] = item;\n                } else {\n                    if (result.length > 0) {\n                        var destItem = result.find(\n                            m => m[groupby] == item[groupby]\n                        );\n                        destItem.value += item.value;\n                        //  destItem.items.push(item)\n                    }\n                }\n            });\n            return result;\n            /* var result = []; var map = {};\n\n     sales.forEach(item => {\n         var groupby = \"month\";\n         var itemitem = [];\n         var mapitem = [];\n         if (!map[item[groupby]]) {\n             var category = item.category;\n\n             mapitem.push({ category: category, amount: item.amount })\n\n             result.push({\n                 [groupby]: item[groupby],\n                 items: mapitem,\n                 amount: item.amount,\n\n             });\n\n             map[item[groupby]] = {};\n             map[item[groupby]][\"item\"] = item;\n             map[item[groupby]][\"itemitem\"] = mapitem;\n         } else {\n             if (result.length > 0) {\n                 var destItem = result.find(m => m[groupby] == item[groupby]);\n                 destItem.amount += item.amount;\n                 var category = item.category;\n                 var mapitem = destItem.items.find(m => m.category == category);\n                 if (!mapitem) {\n                     destItem.items.push({ category: category, amount: item.amount })\n                 } else {\n                     mapitem.amount += item.amount;\n                 }\n                 return\n             }\n         }\n     })\n\n                     return result;*/\n        },\n        formatData() {\n            var sales = this.sale;\n            sales.map(i => {\n                i.quantity = parseInt(i.quantity);\n                var d = i.unitprice.replace(\",\", \"\");\n                i.unitprice = parseInt(i.unitprice.replace(\",\", \"\"));\n                i.amount = parseInt(i.amount.replace(\",\", \"\"));\n                i.month = i.orderdate.split(\"/\")[1];\n                var subcategory = this.subcategory;\n                var categoryTemp = subcategory.find(\n                    m => m.productid == i.productid\n                );\n                if (categoryTemp != undefined) {\n                    i.categoryid = categoryTemp.categoryid;\n                    i.category = categoryTemp.category;\n                    i.subcategory = categoryTemp.subcategory;\n                }\n                return i;\n            });\n            return sales;\n        },\n        formatMonthCategoryData() {\n            var monthCategoryData = this.monthCategoryData;\n            var subcategory = this.subcategory;\n            var result = [];\n            monthCategoryData.forEach(item => {\n                result.push({\n                    name: item.name,\n                    items: []\n                });\n                var map = {};\n                item.items.forEach(itemitem => {\n                    var category = subcategory.find(\n                        m => m.productid == itemitem.productid\n                    );\n                    var categoryid = category.categoryid;\n                    if (!map[categoryid]) {\n                        map[categoryid] = itemitem;\n                        var dept = result.find(m => m.name == item.name);\n\n                        dept.items.push({\n                            category: categoryid,\n                            name: category.category,\n                            value: itemitem.value\n                        });\n                    } else {\n                        var dept = result.find(m => m.name == item.name);\n                        var deptdept = dept.items.find(\n                            m => m.category == categoryid\n                        );\n                        if (!deptdept)\n                            dept.items.push({\n                                category: categoryid,\n                                name: category.category,\n                                value: itemitem.value\n                            });\n                        else deptdept.value += itemitem.value;\n                    }\n                });\n            });\n            console.log(JSON.stringify(result));\n        },\n        getbarData() {\n            var monthCategoryData = this.monthCategoryData;\n            var result = {};\n            monthCategoryData.forEach(function(item, index) {\n                {\n                    item.items.forEach(itemitem => {\n                        if (!result[itemitem.name]) result[itemitem.name] = [];\n                        result[itemitem.name][index] = parseInt(\n                            itemitem.value.toFixed(2)\n                        );\n                    });\n                }\n            });\n            console.log(JSON.stringify(result));\n        },\n        getCategoryClassifyData() {\n            var subCategorySale = this.subCategorySale;\n            var subcategory = this.subcategory;\n            var map = {},\n                dest = []; //新的json数组\n            for (var i = 0; i < subCategorySale.length; i++) {\n                var ai = subCategorySale[i];\n                var category = ai.name;\n                var categoryItem = subcategory.find(m => m.product == category);\n                if (!map[categoryItem.categoryid]) {\n                    //创建一个新的jsonobject\n                    dest.push({\n                        categoryid: categoryItem.categoryid,\n                        categoryName: categoryItem.category,\n                        data: [ai]\n                    });\n                    map[categoryItem.categoryid] = ai;\n                } else {\n                    //放到对应的id下面\n                    for (var j = 0; j < dest.length; j++) {\n                        var dj = dest[j];\n                        if (dj.categoryid == categoryItem.categoryid) {\n                            dj.data.push(ai);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    },\n    mounted() {\n        // this.getCategoryData();\n        this.drawMultiChart2();\n        this.drawMultiCategoryPieChart();\n        this.drawCategorybyMonth();\n        this.drawPieChart();\n        this.drawBarChart();\n        // this.formatMonthCategoryData();\n        //this.getbarData();\n\n        //   this.drawChart();\n        //   this.drawMapChart();\n        //  this.drawMapChart2();\n        //    this.chinaConfigure();\n    }\n};\n</script>\n    <style scoped>\n.header {\n    margin: 4px;\n}\n\n.header .title {\n    font-size: 24px;\n    color: #fff;\n}\n\n.title-bottom {\n    height: 30px;\n    justify-content: center;\n    display: flex;\n}\n\n.bottom-sidebar {\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-image: url(\"~@/assets/images/bottombar.gif\");\n    background-size: 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n    width: 400px;\n}\n\n.bottom-line {\n    width: 100%;\n    height: 30px;\n    background-image: url(\"~@/assets/images/bottomline.png\");\n    background-size: 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n\n.box-content {\n    display: block;\n    line-height: 1.42857143;\n    -webkit-transition: border 0.2s ease-in-out;\n    -o-transition: border 0.2s ease-in-out;\n    transition: border 0.2s ease-in-out;\n}\n\n.box-content.shadow {\n    box-shadow: 1px 2px 8px 0px #888;\n}\n\n.statistic-item {\n    display: flex;\n    margin-bottom: 10px;\n    align-items: center;\n    overflow: hidden;\n}\n\n.statistic-item .icon-content {\n    width: 50px;\n    min-width: 50px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #3b4e82;\n    border-radius: 50%;\n}\n\n.icon-content .iconfont {\n    font-size: 24px;\n    color: #fff;\n}\n\n.text-content {\n    margin-left: 10px;\n    overflow: hidden;\n}\n\n.statistic-item .text {\n    font-size: 26px;\n    color: #fff;\n}\n\n.statistic-item .sub-title {\n    font-size: 14px;\n    text-align: left;\n    color: rgb(154, 168, 212);\n}\n\n.chart {\n    height: 300px;\n}\n\n.echart {\n    width: 500px;\n    height: 500px;\n}\n\n.table-container {\n    width: 400px;\n    padding: 20px;\n}\n\n.table {\n    width: 100%;\n    background-color: transparent;\n    color: #666;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e6e6e6;\n}\n\n.table.darkblue {\n    border-color: rgba(130, 157, 248, 0.705);\n}\n\n.table.darkblue td {\n    border: none;\n}\n\n.table.darkblue tr .th {\n    color: rgb(154, 168, 212);\n}\n\n.table.darkblue tr td {\n    color: rgb(229, 233, 247);\n}\n\n.table tr {\n    transition: all 0.3s;\n    -webkit-transition: all 0.3s;\n}\n\n.table td.border_bottom_none {\n    border-bottom: none;\n}\n\n.table td.td_2 {\n    padding: 0;\n}\n\n.table td,\n.table th {\n    position: relative;\n    padding: 9px 15px;\n    min-height: 20px;\n    line-height: 20px;\n    font-size: 14px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e6e6e6;\n    padding: 5px 10px;\n    border-top: none;\n    border-left: none;\n}\n\n.table td:last-child {\n    border-right: none;\n}\n\n.table tr:last-child {\n    border-bottom: none;\n}\n\n.table td.padding_none {\n    padding: 0;\n}\n\n.width_half {\n    width: 50%;\n}\n\n.td_2_table tr:last-child td:last-child {\n    border-bottom: none;\n}\n\n.td_right {\n    text-align: right;\n}\n\n.chart-container {\n    height: 200px;\n}\n\n.box-content .caption {\n    text-align: left;\n    color: #fff;\n}\n\nsmall.number {\n    color: #0b8603;\n    font-weight: bold;\n}\n\n.warning {\n    color: red;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},[_c('div',{staticClass:\"col-sm-12 col-md-12\"},[_c('div',{staticClass:\"box-content\"},[_c('div',{staticClass:\"statistic-box row\"},_vm._l((_vm.indexData),function(item){return _c('div',{key:item.name,staticClass:\"statistic-item col-md-6\"},[_vm._m(1,true),_vm._v(\" \"),_c('div',{staticClass:\"text-content\"},[_c('div',{staticClass:\"text\"},[_c('span',{staticClass:\"counter\"},[_c('ICountUp',{attrs:{\"delay\":_vm.delay,\"endVal\":item.value,\"options\":_vm.options},on:{\"ready\":_vm.onReady}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"sub-title\"},[_vm._v(_vm._s(item.name))])])])}),0)])]),_vm._v(\" \"),_c('div',{ref:\"multiPieChart\",staticClass:\"chart\",staticStyle:{\"height\":\"500px\"}}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('table',{staticClass:\"table border-table darkblue\",staticStyle:{\"width\":\"100%\"},attrs:{\"cellpadding\":\"0\",\"cellspacing\":\"0\"}},[_vm._m(2),_vm._v(\" \"),_vm._l((_vm.datalist),function(item,index){return _c('tr',{key:item.id},[_c('td',{staticClass:\"border_bottom border_left_no\"},[_vm._v(_vm._s(index+1))]),_vm._v(\" \"),_c('td',{staticClass:\"border_bottom enable\",on:{\"click\":function($event){return _vm.tdSelect(item)}}},[_vm._v(\"\\n                                \"+_vm._s(item.area)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{staticClass:\"td_right\"},[_vm._v(\"\\n                                \"+_vm._s(item.nValue)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{staticClass:\"td_right\"},[_vm._v(\"\\n                                \"+_vm._s(item.yValue)+\"\\n\\n                            \")])])})],2),_vm._v(\" \"),_c('div',{ref:\"pieChart\",staticClass:\"chart\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-8\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-12 col-md-12\"},[_c('div',{staticClass:\"box-content\"},[_c('div',{staticClass:\"caption\"},[_c('div',{staticClass:\"main\"},[_c('h2',[_c('ICountUp',{attrs:{\"endVal\":4785374}}),_vm._v(\" \"),_c('small',{staticClass:\"number warning\"},[_vm._v(\"12.11%\")])],1)]),_vm._v(\" \"),_vm._m(3)]),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"mapContainer\"}}),_vm._v(\" \"),_c('div',{ref:\"categoryChart\",staticClass:\"chart\",staticStyle:{\"height\":\"600px\"}})])])])])]),_vm._v(\" \"),_vm._m(4)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"\\n智慧就业大数据分析服务平台            \")]),_vm._v(\" \"),_c('div',{staticClass:\"title-bottom\"},[_c('div',{staticClass:\"bottom-sidebar\"})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"icon-content\"},[_c('span',{staticClass:\"iconfont icon-shuju\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{staticClass:\"th\",staticStyle:{\"width\":\"90px\"}},[_vm._v(\"排名\")]),_vm._v(\" \"),_c('td',{staticClass:\"th\"},[_vm._v(\"岗位\")]),_vm._v(\" \"),_c('td',{staticClass:\"th td_right\"},[_vm._v(\"\\n                                平均月薪\\n                            \")]),_vm._v(\" \"),_c('td',{staticClass:\"th td_right\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h6',[_vm._v(\"数据仅供参考\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('div',{staticClass:\"bottom-line\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1a02b067\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1a02b067\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1a02b067\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1a02b067\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/index.vue\n// module id = null\n// module chunks = ","<template>\n    <div>\n<div class=\"chart\" id=\"mapChart\"></div>\n    </div>\n</template>\n<script>\n    \n    import chinaJson from 'echarts/map/json/china.json'\n\nexport default{\n    data() {\n            return {\n\n            }\n            },\n            \n    methods:{\n        drawMapChart(){\n             //初始化echarts实例\n             this.$echarts.registerMap('china', chinaJson)\n                var myChart = this.$echarts.init(document.getElementById('mapChart'));\n            var data = [\n     {name: '海门', value: 9},\n     {name: '鄂尔多斯', value: 12},\n     {name: '招远', value: 12},\n     {name: '舟山', value: 12},\n     {name: '齐齐哈尔', value: 14},\n     {name: '盐城', value: 15},\n     {name: '赤峰', value: 16},\n     {name: '青岛', value: 18},\n     {name: '乳山', value: 18},\n     {name: '金昌', value: 19},\n     {name: '泉州', value: 21},\n     {name: '莱西', value: 21},\n     {name: '日照', value: 21},\n     {name: '胶南', value: 22},\n     {name: '南通', value: 23},\n     {name: '拉萨', value: 24},\n     {name: '云浮', value: 24},\n     {name: '梅州', value: 25},\n     {name: '文登', value: 25},\n     {name: '上海', value: 25},\n     {name: '攀枝花', value: 25},\n     {name: '威海', value: 25},\n     {name: '承德', value: 25},\n     {name: '厦门', value: 26},\n     {name: '汕尾', value: 26},\n     {name: '潮州', value: 26},\n     {name: '丹东', value: 27},\n     {name: '太仓', value: 27},\n     {name: '曲靖', value: 27},\n     {name: '烟台', value: 28},\n     {name: '福州', value: 29},\n     {name: '瓦房店', value: 30},\n     {name: '即墨', value: 30},\n     {name: '抚顺', value: 31},\n     {name: '玉溪', value: 31},\n     {name: '张家口', value: 31},\n     {name: '阳泉', value: 31},\n     {name: '莱州', value: 32},\n     {name: '湖州', value: 32},\n     {name: '汕头', value: 32},\n     {name: '昆山', value: 33},\n     {name: '宁波', value: 33},\n     {name: '湛江', value: 33},\n     {name: '揭阳', value: 34},\n     {name: '荣成', value: 34},\n     {name: '连云港', value: 35},\n     {name: '葫芦岛', value: 35},\n     {name: '常熟', value: 36},\n     {name: '东莞', value: 36},\n     {name: '河源', value: 36},\n     {name: '淮安', value: 36},\n     {name: '泰州', value: 36},\n     {name: '南宁', value: 37},\n     {name: '营口', value: 37},\n     {name: '惠州', value: 37},\n     {name: '江阴', value: 37},\n     {name: '蓬莱', value: 37},\n     {name: '韶关', value: 38},\n     {name: '嘉峪关', value: 38},\n     {name: '广州', value: 38},\n     {name: '延安', value: 38},\n     {name: '太原', value: 39},\n     {name: '清远', value: 39},\n     {name: '中山', value: 39},\n     {name: '昆明', value: 39},\n     {name: '寿光', value: 40},\n     {name: '盘锦', value: 40},\n     {name: '长治', value: 41},\n     {name: '深圳', value: 41},\n     {name: '珠海', value: 42},\n     {name: '宿迁', value: 43},\n     {name: '咸阳', value: 43},\n     {name: '铜川', value: 44},\n     {name: '平度', value: 44},\n     {name: '佛山', value: 44},\n     {name: '海口', value: 44},\n     {name: '江门', value: 45},\n     {name: '章丘', value: 45},\n     {name: '肇庆', value: 46},\n     {name: '大连', value: 47},\n     {name: '临汾', value: 47},\n     {name: '吴江', value: 47},\n     {name: '石嘴山', value: 49},\n     {name: '沈阳', value: 50},\n     {name: '苏州', value: 50},\n     {name: '茂名', value: 50},\n     {name: '嘉兴', value: 51},\n     {name: '长春', value: 51},\n     {name: '胶州', value: 52},\n     {name: '银川', value: 52},\n     {name: '张家港', value: 52},\n     {name: '三门峡', value: 53},\n     {name: '锦州', value: 54},\n     {name: '南昌', value: 54},\n     {name: '柳州', value: 54},\n     {name: '三亚', value: 54},\n     {name: '自贡', value: 56},\n     {name: '吉林', value: 56},\n     {name: '阳江', value: 57},\n     {name: '泸州', value: 57},\n     {name: '西宁', value: 57},\n     {name: '宜宾', value: 58},\n     {name: '呼和浩特', value: 58},\n     {name: '成都', value: 58},\n     {name: '大同', value: 58},\n     {name: '镇江', value: 59},\n     {name: '桂林', value: 59},\n     {name: '张家界', value: 59},\n     {name: '宜兴', value: 59},\n     {name: '北海', value: 60},\n     {name: '西安', value: 61},\n     {name: '金坛', value: 62},\n     {name: '东营', value: 62},\n     {name: '牡丹江', value: 63},\n     {name: '遵义', value: 63},\n     {name: '绍兴', value: 63},\n     {name: '扬州', value: 64},\n     {name: '常州', value: 64},\n     {name: '潍坊', value: 65},\n     {name: '重庆', value: 66},\n     {name: '台州', value: 67},\n     {name: '南京', value: 67},\n     {name: '滨州', value: 70},\n     {name: '贵阳', value: 71},\n     {name: '无锡', value: 71},\n     {name: '本溪', value: 71},\n     {name: '克拉玛依', value: 72},\n     {name: '渭南', value: 72},\n     {name: '马鞍山', value: 72},\n     {name: '宝鸡', value: 72},\n     {name: '焦作', value: 75},\n     {name: '句容', value: 75},\n     {name: '北京', value: 79},\n     {name: '徐州', value: 79},\n     {name: '衡水', value: 80},\n     {name: '包头', value: 80},\n     {name: '绵阳', value: 80},\n     {name: '乌鲁木齐', value: 84},\n     {name: '枣庄', value: 84},\n     {name: '杭州', value: 84},\n     {name: '淄博', value: 85},\n     {name: '鞍山', value: 86},\n     {name: '溧阳', value: 86},\n     {name: '库尔勒', value: 86},\n     {name: '安阳', value: 90},\n     {name: '开封', value: 90},\n     {name: '济南', value: 92},\n     {name: '德阳', value: 93},\n     {name: '温州', value: 95},\n     {name: '九江', value: 96},\n     {name: '邯郸', value: 98},\n     {name: '临安', value: 99},\n     {name: '兰州', value: 99},\n     {name: '沧州', value: 100},\n     {name: '临沂', value: 103},\n     {name: '南充', value: 104},\n     {name: '天津', value: 105},\n     {name: '富阳', value: 106},\n     {name: '泰安', value: 112},\n     {name: '诸暨', value: 112},\n     {name: '郑州', value: 113},\n     {name: '哈尔滨', value: 114},\n     {name: '聊城', value: 116},\n     {name: '芜湖', value: 117},\n     {name: '唐山', value: 119},\n     {name: '平顶山', value: 119},\n     {name: '邢台', value: 119},\n     {name: '德州', value: 120},\n     {name: '济宁', value: 120},\n     {name: '荆州', value: 127},\n     {name: '宜昌', value: 130},\n     {name: '义乌', value: 132},\n     {name: '丽水', value: 133},\n     {name: '洛阳', value: 134},\n     {name: '秦皇岛', value: 136},\n     {name: '株洲', value: 143},\n     {name: '石家庄', value: 147},\n     {name: '莱芜', value: 148},\n     {name: '常德', value: 152},\n     {name: '保定', value: 153},\n     {name: '湘潭', value: 154},\n     {name: '金华', value: 157},\n     {name: '岳阳', value: 169},\n     {name: '长沙', value: 175},\n     {name: '衢州', value: 177},\n     {name: '廊坊', value: 193},\n     {name: '菏泽', value: 194},\n     {name: '合肥', value: 229},\n     {name: '武汉', value: 273},\n     {name: '大庆', value: 279}\n];\nvar geoCoordMap = {\n    '海门':[121.15,31.89],\n    '鄂尔多斯':[109.781327,39.608266],\n    '招远':[120.38,37.35],\n    '舟山':[122.207216,29.985295],\n    '齐齐哈尔':[123.97,47.33],\n    '盐城':[120.13,33.38],\n    '赤峰':[118.87,42.28],\n    '青岛':[120.33,36.07],\n    '乳山':[121.52,36.89],\n    '金昌':[102.188043,38.520089],\n    '泉州':[118.58,24.93],\n    '莱西':[120.53,36.86],\n    '日照':[119.46,35.42],\n    '胶南':[119.97,35.88],\n    '南通':[121.05,32.08],\n    '拉萨':[91.11,29.97],\n    '云浮':[112.02,22.93],\n    '梅州':[116.1,24.55],\n    '文登':[122.05,37.2],\n    '上海':[121.48,31.22],\n    '攀枝花':[101.718637,26.582347],\n    '威海':[122.1,37.5],\n    '承德':[117.93,40.97],\n    '厦门':[118.1,24.46],\n    '汕尾':[115.375279,22.786211],\n    '潮州':[116.63,23.68],\n    '丹东':[124.37,40.13],\n    '太仓':[121.1,31.45],\n    '曲靖':[103.79,25.51],\n    '烟台':[121.39,37.52],\n    '福州':[119.3,26.08],\n    '瓦房店':[121.979603,39.627114],\n    '即墨':[120.45,36.38],\n    '抚顺':[123.97,41.97],\n    '玉溪':[102.52,24.35],\n    '张家口':[114.87,40.82],\n    '阳泉':[113.57,37.85],\n    '莱州':[119.942327,37.177017],\n    '湖州':[120.1,30.86],\n    '汕头':[116.69,23.39],\n    '昆山':[120.95,31.39],\n    '宁波':[121.56,29.86],\n    '湛江':[110.359377,21.270708],\n    '揭阳':[116.35,23.55],\n    '荣成':[122.41,37.16],\n    '连云港':[119.16,34.59],\n    '葫芦岛':[120.836932,40.711052],\n    '常熟':[120.74,31.64],\n    '东莞':[113.75,23.04],\n    '河源':[114.68,23.73],\n    '淮安':[119.15,33.5],\n    '泰州':[119.9,32.49],\n    '南宁':[108.33,22.84],\n    '营口':[122.18,40.65],\n    '惠州':[114.4,23.09],\n    '江阴':[120.26,31.91],\n    '蓬莱':[120.75,37.8],\n    '韶关':[113.62,24.84],\n    '嘉峪关':[98.289152,39.77313],\n    '广州':[113.23,23.16],\n    '延安':[109.47,36.6],\n    '太原':[112.53,37.87],\n    '清远':[113.01,23.7],\n    '中山':[113.38,22.52],\n    '昆明':[102.73,25.04],\n    '寿光':[118.73,36.86],\n    '盘锦':[122.070714,41.119997],\n    '长治':[113.08,36.18],\n    '深圳':[114.07,22.62],\n    '珠海':[113.52,22.3],\n    '宿迁':[118.3,33.96],\n    '咸阳':[108.72,34.36],\n    '铜川':[109.11,35.09],\n    '平度':[119.97,36.77],\n    '佛山':[113.11,23.05],\n    '海口':[110.35,20.02],\n    '江门':[113.06,22.61],\n    '章丘':[117.53,36.72],\n    '肇庆':[112.44,23.05],\n    '大连':[121.62,38.92],\n    '临汾':[111.5,36.08],\n    '吴江':[120.63,31.16],\n    '石嘴山':[106.39,39.04],\n    '沈阳':[123.38,41.8],\n    '苏州':[120.62,31.32],\n    '茂名':[110.88,21.68],\n    '嘉兴':[120.76,30.77],\n    '长春':[125.35,43.88],\n    '胶州':[120.03336,36.264622],\n    '银川':[106.27,38.47],\n    '张家港':[120.555821,31.875428],\n    '三门峡':[111.19,34.76],\n    '锦州':[121.15,41.13],\n    '南昌':[115.89,28.68],\n    '柳州':[109.4,24.33],\n    '三亚':[109.511909,18.252847],\n    '自贡':[104.778442,29.33903],\n    '吉林':[126.57,43.87],\n    '阳江':[111.95,21.85],\n    '泸州':[105.39,28.91],\n    '西宁':[101.74,36.56],\n    '宜宾':[104.56,29.77],\n    '呼和浩特':[111.65,40.82],\n    '成都':[104.06,30.67],\n    '大同':[113.3,40.12],\n    '镇江':[119.44,32.2],\n    '桂林':[110.28,25.29],\n    '张家界':[110.479191,29.117096],\n    '宜兴':[119.82,31.36],\n    '北海':[109.12,21.49],\n    '西安':[108.95,34.27],\n    '金坛':[119.56,31.74],\n    '东营':[118.49,37.46],\n    '牡丹江':[129.58,44.6],\n    '遵义':[106.9,27.7],\n    '绍兴':[120.58,30.01],\n    '扬州':[119.42,32.39],\n    '常州':[119.95,31.79],\n    '潍坊':[119.1,36.62],\n    '重庆':[106.54,29.59],\n    '台州':[121.420757,28.656386],\n    '南京':[118.78,32.04],\n    '滨州':[118.03,37.36],\n    '贵阳':[106.71,26.57],\n    '无锡':[120.29,31.59],\n    '本溪':[123.73,41.3],\n    '克拉玛依':[84.77,45.59],\n    '渭南':[109.5,34.52],\n    '马鞍山':[118.48,31.56],\n    '宝鸡':[107.15,34.38],\n    '焦作':[113.21,35.24],\n    '句容':[119.16,31.95],\n    '北京':[116.46,39.92],\n    '徐州':[117.2,34.26],\n    '衡水':[115.72,37.72],\n    '包头':[110,40.58],\n    '绵阳':[104.73,31.48],\n    '乌鲁木齐':[87.68,43.77],\n    '枣庄':[117.57,34.86],\n    '杭州':[120.19,30.26],\n    '淄博':[118.05,36.78],\n    '鞍山':[122.85,41.12],\n    '溧阳':[119.48,31.43],\n    '库尔勒':[86.06,41.68],\n    '安阳':[114.35,36.1],\n    '开封':[114.35,34.79],\n    '济南':[117,36.65],\n    '德阳':[104.37,31.13],\n    '温州':[120.65,28.01],\n    '九江':[115.97,29.71],\n    '邯郸':[114.47,36.6],\n    '临安':[119.72,30.23],\n    '兰州':[103.73,36.03],\n    '沧州':[116.83,38.33],\n    '临沂':[118.35,35.05],\n    '南充':[106.110698,30.837793],\n    '天津':[117.2,39.13],\n    '富阳':[119.95,30.07],\n    '泰安':[117.13,36.18],\n    '诸暨':[120.23,29.71],\n    '郑州':[113.65,34.76],\n    '哈尔滨':[126.63,45.75],\n    '聊城':[115.97,36.45],\n    '芜湖':[118.38,31.33],\n    '唐山':[118.02,39.63],\n    '平顶山':[113.29,33.75],\n    '邢台':[114.48,37.05],\n    '德州':[116.29,37.45],\n    '济宁':[116.59,35.38],\n    '荆州':[112.239741,30.335165],\n    '宜昌':[111.3,30.7],\n    '义乌':[120.06,29.32],\n    '丽水':[119.92,28.45],\n    '洛阳':[112.44,34.7],\n    '秦皇岛':[119.57,39.95],\n    '株洲':[113.16,27.83],\n    '石家庄':[114.48,38.03],\n    '莱芜':[117.67,36.19],\n    '常德':[111.69,29.05],\n    '保定':[115.48,38.85],\n    '湘潭':[112.91,27.87],\n    '金华':[119.64,29.12],\n    '岳阳':[113.09,29.37],\n    '长沙':[113,28.21],\n    '衢州':[118.88,28.97],\n    '廊坊':[116.7,39.53],\n    '菏泽':[115.480656,35.23375],\n    '合肥':[117.27,31.86],\n    '武汉':[114.31,30.52],\n    '大庆':[125.03,46.58]\n};\n\nvar convertData = function (data) {\n    var res = [];\n    for (var i = 0; i < data.length; i++) {\n        var geoCoord = geoCoordMap[data[i].name];\n        if (geoCoord) {\n            res.push({\n                name: data[i].name,\n                value: geoCoord.concat(data[i].value)\n            });\n        }\n    }\n    return res;\n};\n\nvar option = {\n    title: {\n        text: '全国主要城市空气质量 - 百度地图',\n        subtext: 'data from PM25.in',\n        sublink: 'http://www.pm25.in',\n        left: 'center'\n    },\n    tooltip : {\n        trigger: 'item'\n    },\n       //布局e\n       geo: {\n                        show: true,\n                        map: 'china',\n                        zoom: 1,  //地图绽放\n                        scaleLimit: 2,\n                        label: {\n                            normal: {\n                                show: true,\n                                textStyle: {\n                                    color: '#fff'\n                                }\n                            },\n                            emphasis: {\n                                show: false,\n                            }\n                        },\n                        roam: false,//是否开启鼠标缩放和平移漫游\n                        itemStyle: {\n                            normal: {\n                                areaColor: 'transparent',\n                                borderColor: '#3fdaff',\n                                borderWidth: 2,\n                                shadowColor: 'rgba(63, 218, 255, 0.5)',\n                                shadowBlur: 30\n                            },\n                            emphasis: {\n                                areaColor: '#2B91B7',\n                                color: '#fff'\n                            }\n                        }\n                    },\n                  \n    bmap: {\n        show: true,\n        center: [104.114129, 37.550339],\n        map: 'china',\n        zoom: 5,\n        roam: true,\n        mapStyle: {\n            styleJson: [{\n                'featureType': 'water',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#d1d1d1'\n                }\n            }, {\n                'featureType': 'land',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#f3f3f3'\n                }\n            }, {\n                'featureType': 'railway',\n                'elementType': 'all',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'highway',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#fdfdfd'\n                }\n            }, {\n                'featureType': 'highway',\n                'elementType': 'labels',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'arterial',\n                'elementType': 'geometry',\n                'stylers': {\n                    'color': '#fefefe'\n                }\n            }, {\n                'featureType': 'arterial',\n                'elementType': 'geometry.fill',\n                'stylers': {\n                    'color': '#fefefe'\n                }\n            }, {\n                'featureType': 'poi',\n                'elementType': 'all',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'green',\n                'elementType': 'all',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'subway',\n                'elementType': 'all',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'manmade',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#d1d1d1'\n                }\n            }, {\n                'featureType': 'local',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#d1d1d1'\n                }\n            }, {\n                'featureType': 'arterial',\n                'elementType': 'labels',\n                'stylers': {\n                    'visibility': 'off'\n                }\n            }, {\n                'featureType': 'boundary',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#fefefe'\n                }\n            }, {\n                'featureType': 'building',\n                'elementType': 'all',\n                'stylers': {\n                    'color': '#d1d1d1'\n                }\n            }, {\n                'featureType': 'label',\n                'elementType': 'labels.text.fill',\n                'stylers': {\n                    'color': '#999999'\n                }\n            }]\n        }\n    },\n    series : [\n        {\n            name: 'pm2.5',\n            type: 'scatter',\n       coordinateSystem: 'geo',\n            data: convertData(data),\n            symbolSize: function (val) {\n                var d= val[2] / 10;\n                console.log( val[2]+\"   \"+d)\n                return val[2] / 10;\n            },\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: false\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                                normal: {\n                                    color: '#F4E925',\n                                    shadowBlur: 10,\n                                    shadowColor: '#05C3F9'\n                                }\n                            },\n        },\n        {\n            name: 'Top 5',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(data.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 6)),\n            symbolSize: function (val) {\n                return val[2] / 10;\n            },\n            showEffectOn: 'render',\n            rippleEffect: {\n                brushType: 'stroke'\n            },\n            hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: true\n                }\n            },\n            itemStyle: {\n                                normal: {\n                                    color: '#F4E925',\n                                    shadowBlur: 10,\n                                    shadowColor: '#05C3F9'\n                                }\n                            },\n            zlevel: 1\n        }\n    ]\n};\nmyChart.setOption(option);\n\n}\n    },\n    mounted(){\n        this.drawMapChart();\n    }\n}\n</script>\n<style>\n.chart{\n    height:500px;\n}</style>\n\n\n// WEBPACK FOOTER //\n// src/components/pages/test.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"chart\",attrs:{\"id\":\"mapChart\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-286d809b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/test.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-286d809b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./test.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-286d809b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./test.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/test.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport index from '@/components/pages/index'\nimport test from '@/components/pages/test'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'index',\n      component: index\n    },\n    {\n      path: '/HelloWorld',\n      name: 'HelloWorld',\n      component: HelloWorld\n    },\n    {\n        path: '/test',\n        name: 'test',\n        component: test\n      },\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport './assets/css/iconfont.css'\nimport './assets/css/bootstrap.min.css'\nlet echarts = require('echarts/echarts.all')\n \nVue.config.productionTip = false\nVue.prototype.$echarts = echarts\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"type\":\"FeatureCollection\",\"features\":[{\"id\":\"710000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@°Ü¯Û\"],[\"@@ƛĴÕƊÉɼģºðʀ\\\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ\"],[\"@@\\\\p|WoYG¿¥Ij@¢\"],[\"@@¡@V^RqBbAnTXeRz¤L«³I\"],[\"@@ÆEEkWqë @\"],[\"@@fced\"]],\"encodeOffsets\":[[[122886,24033]],[[123335,22980]],[[122375,24193]],[[122518,24117]],[[124427,22618]],[[124862,26043]]]},\"properties\":{\"cp\":[121.509062,25.044332],\"name\":\"台湾\",\"childNum\":6}},{\"id\":\"130000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe\"],[\"@@U`Ts¿mÂ\"],[\"@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\\\ta\\\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï\"]],\"encodeOffsets\":[[[119712,40641]],[[121616,39981]],[[116462,37237]]]},\"properties\":{\"cp\":[114.502461,38.045474],\"name\":\"河北\",\"childNum\":3}},{\"id\":\"140000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz\"],\"encodeOffsets\":[[116874,41716]]},\"properties\":{\"cp\":[112.549248,37.857014],\"name\":\"山西\",\"childNum\":1}},{\"id\":\"150000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Č^â£ĂhĖMÈÄw\\\\fŦ°W ¢¾luŸDw\\\\̀ʉÌÛMĀ[bÓEn}¶Vcês¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARëśĳĘů`çõh]y»ǃǛҤxÒm~zf}pf|ÜroÈzrKÈĵSƧż؜Ġu¦ö\"],[\"@@sKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\\\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ż؛Ç@Vu»Aylßí¹ĵêÝlISò³C¹Ìâ²i¶Ìoú^H²CǜңǄ z¼g^èöŰ_Ĳĕê}gÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉ³MEĸÅĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µ\"]],\"encodeOffsets\":[[[127444,52594]],[[113793,40312]]]},\"properties\":{\"cp\":[111.670801,40.818311],\"name\":\"内蒙古\",\"childNum\":2}},{\"id\":\"210000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@L@@sa\"],[\"@@MnNm\"],[\"@@dc\"],[\"@@eÀC@b\"],[\"@@fXwkbrÄ`qg\"],[\"@@^jtWQ\"],[\"@@~ Y]c\"],[\"@@G`ĔN^_¿ZÃM\"],[\"@@iX¶BY\"],[\"@@YZ\"],[\"@@L_{Epf\"],[\"@@^WqCT\\\\\"],[\"@@\\\\[§t|¤_\"],[\"@@m`n_\"],[\"@@Ïxǌ{q_×^Giip\"],[\"@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\\\ÀøíDm¦ÎbŨabaĘ\\\\ľãÂ¸atÎSƐ´©v\\\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA\"]],\"encodeOffsets\":[[[123686,41445]],[[126019,40435]],[[124393,40128]],[[126117,39963]],[[125322,40140]],[[126686,40700]],[[126041,40374]],[[125584,40168]],[[125453,40165]],[[125362,40214]],[[125280,40291]],[[125774,39997]],[[125976,40496]],[[125822,39993]],[[125509,40217]],[[122731,40949]]]},\"properties\":{\"cp\":[123.429096,41.796767],\"name\":\"辽宁\",\"childNum\":16}},{\"id\":\"220000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\\\xs¬dĆkNnuNUuP@vRY¾\\\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\\\¹¥Yĭl¤OvLjM_a W`zļMž·\\\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG\"],\"encodeOffsets\":[[130196,42528]]},\"properties\":{\"cp\":[125.3245,43.886841],\"name\":\"吉林\",\"childNum\":1}},{\"id\":\"230000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƨĶTLÇyqpÇÛqe{~oyen}s`qiXGù]Ëp½©lÉÁp]Þñ´FĂ^fäîºkàz¼BUvÈ@\"],[\"@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]\"]],\"encodeOffsets\":[[[127123,51780]],[[134456,44547]]]},\"properties\":{\"cp\":[126.642464,45.756967],\"name\":\"黑龙江\",\"childNum\":2}},{\"id\":\"320000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@cþÅPi`ZRu¥É\\\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ\"],\"encodeOffsets\":[[121740,32276]]},\"properties\":{\"cp\":[118.767413,32.041544],\"name\":\"江苏\",\"childNum\":1}},{\"id\":\"330000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@E^dQ]K\"],[\"@@jX^j\"],[\"@@sfbU\"],[\"@@qP\\\\xz[ck\"],[\"@@R¢FX}°[s_\"],[\"@@Cb\\\\}\"],[\"@@e|v\\\\la{u\"],[\"@@v~u}\"],[\"@@QxÂF¯}\"],[\"@@¹nvÞs¯o\"],[\"@@rSkUEj\"],[\"@@bi­ZP\"],[\"@@p[}INf\"],[\"@@À¿\"],[\"@@¹dnb\"],[\"@@rSBnR\"],[\"@@g~h}\"],[\"@@FlEk\"],[\"@@OdPc\"],[\"@@v[u\\\\\"],[\"@@FjâL~wyoo~sµL\\\\\"],[\"@@¬e¹aN\"],[\"@@\\\\nÔ¡q]L³ë\\\\ÿ®QÖ\"],[\"@@ÊA­©[¬\"],[\"@@Kxv­\"],[\"@@@hlIk]\"],[\"@@pW{o||j\"],[\"@@Md|_mC\"],[\"@@¢X£ÏylD¼XtH\"],[\"@@hlÜ[LykAvyfw^E¤\"],[\"@@fp¤MusR\"],[\"@@®_ma~LÁ¬Z\"],[\"@@iMxZ\"],[\"@@ZcYd\"],[\"@@Z~dOSo|A¿qZv\"],[\"@@@`EN¡v\"],[\"@@|TY{\"],[\"@@@n@m\"],[\"@@XWkCT\\\\\"],[\"@@ºwZRkĕWO¢\"],[\"@@X®±GrÆª\\\\ÔáXq{\"],[\"@@ůTG°ĄLHm°UC\"],[\"@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\\\ßðChiqªĭiAuA­µ_W¥ƣO\\\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst\"],[\"@@o\\\\VzRZ}y\"],[\"@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr\"]],\"encodeOffsets\":[[[125592,31553]],[[125785,31436]],[[125729,31431]],[[125513,31380]],[[125223,30438]],[[125115,30114]],[[124815,29155]],[[124419,28746]],[[124095,28635]],[[124005,28609]],[[125000,30713]],[[125111,30698]],[[125078,30682]],[[125150,30684]],[[124014,28103]],[[125008,31331]],[[125411,31468]],[[125329,31479]],[[125626,30916]],[[125417,30956]],[[125254,30976]],[[125199,30997]],[[125095,31058]],[[125083,30915]],[[124885,31015]],[[125218,30798]],[[124867,30838]],[[124755,30788]],[[124802,30809]],[[125267,30657]],[[125218,30578]],[[125200,30562]],[[124968,30474]],[[125167,30396]],[[124955,29879]],[[124714,29781]],[[124762,29462]],[[124325,28754]],[[123990,28459]],[[125366,31477]],[[125115,30363]],[[125369,31139]],[[122495,31878]],[[125329,30690]],[[125192,30787]]]},\"properties\":{\"cp\":[120.153576,30.287459],\"name\":\"浙江\",\"childNum\":45}},{\"id\":\"340000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@^iuLX^\"],[\"@@e©Ehl\"],[\"@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´\"]],\"encodeOffsets\":[[[121722,32278]],[[119475,30423]],[[119168,35472]]]},\"properties\":{\"cp\":[117.283042,31.86119],\"name\":\"安徽\",\"childNum\":3}},{\"id\":\"350000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@zht´]\"],[\"@@aj^~ĆG©O\"],[\"@@ed¨C}}i\"],[\"@@@vPGsQ\"],[\"@@sBzddW]Q\"],[\"@@S¨Q{\"],[\"@@NVucW\"],[\"@@qptBAq\"],[\"@@¸[mu\"],[\"@@Q\\\\pD]_\"],[\"@@jSwUadpF\"],[\"@@eXª~\"],[\"@@AjvFso\"],[\"@@fT_Çí\\\\v|ba¦jZÆy°\"],[\"@@IjJi\"],[\"@@wJIx«¼AoNe{M­\"],[\"@@K±¡ÓČäeZ\"],[\"@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\\\_\"]],\"encodeOffsets\":[[[123250,27563]],[[122541,27268]],[[123020,27189]],[[122916,27125]],[[122887,26845]],[[122808,26762]],[[122568,25912]],[[122778,26197]],[[122515,26757]],[[122816,26587]],[[123388,27005]],[[122450,26243]],[[122578,25962]],[[121255,25103]],[[120987,24903]],[[122339,25802]],[[121042,25093]],[[122439,26024]]]},\"properties\":{\"cp\":[119.306239,26.075302],\"name\":\"福建\",\"childNum\":18}},{\"id\":\"360000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĢĨƐgļ¼ÂMD~ņªe^\\\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\\\L²\"],\"encodeOffsets\":[[116689,26234]]},\"properties\":{\"cp\":[115.892151,28.676493],\"name\":\"江西\",\"childNum\":1}},{\"id\":\"370000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Xjd]{K\"],[\"@@itbFHy\"],[\"@@HlGk\"],[\"@@TGy\"],[\"@@K¬U\"],[\"@@WdXc\"],[\"@@PtOs\"],[\"@@LnXhc\"],[\"@@ppVu]Or\"],[\"@@cdzAUa\"],[\"@@udRhnCI\"],[\"@@oIpR\"],[\"@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\\\ebZHŖR¬ŢƱùęOÑM­³FÛWp[\"]],\"encodeOffsets\":[[[123806,39303]],[[123821,39266]],[[123742,39256]],[[123702,39203]],[[123649,39066]],[[123847,38933]],[[123580,38839]],[[123894,37288]],[[123043,36624]],[[123344,38676]],[[123522,38857]],[[123628,38858]],[[118260,36742]]]},\"properties\":{\"cp\":[117.000923,36.675807],\"name\":\"山东\",\"childNum\":13}},{\"id\":\"410000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\\\d\\\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\\\ÀEhİgÞē X¼Pk|m\"],\"encodeOffsets\":[[118256,37017]]},\"properties\":{\"cp\":[113.665412,34.757975],\"name\":\"河南\",\"childNum\":1}},{\"id\":\"420000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@AB\"],[\"@@lskt\"],[\"@@¾«}{ra®pîÃ\\\\{øCËyyB±b\\\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\\\É[T·k¹©oĕ@A¾wya¥Y\\\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤\"]],\"encodeOffsets\":[[[113712,34000]],[[115612,30507]],[[113649,34054]]]},\"properties\":{\"cp\":[114.298572,30.584355],\"name\":\"湖北\",\"childNum\":3}},{\"id\":\"430000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@nFTs\"],[\"@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM\"],[\"@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\\\Ĕ[N¥ˀmĎăJ\\\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ\"]],\"encodeOffsets\":[[[115640,30489]],[[112543,27312]],[[116690,26230]]]},\"properties\":{\"cp\":[112.982279,28.19409],\"name\":\"湖南\",\"childNum\":3}},{\"id\":\"440000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@QdAua\"],[\"@@lxDLo\"],[\"@@sbhNLo\"],[\"@@Ă ā\"],[\"@@WltO[[\"],[\"@@Kr]S\"],[\"@@eI]y\"],[\"@@I|Mym\"],[\"@@Û³LS¼Y\"],[\"@@nvºBëui©`¾\"],[\"@@zdÛJw®\"],[\"@@°¯\"],[\"@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo\"],[\"@@sŗÃÔėAƁZÄ ~°ČPäh\"],[\"@@¶ÝÌvmĞh­ıQ\"],[\"@@HdSjĒ¢D}waru«ZqadYM\"],[\"@@el\\\\LqqU\"],[\"@@~rMo\\\\\"],[\"@@f^C\"],[\"@@øPªoj÷ÍÝħXČx°Q¨ıXNv\"],[\"@@gÇƳo[~tly\"],[\"@@EÆC¿\"],[\"@@OP\"],[\"@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi\"]],\"encodeOffsets\":[[[117381,22988]],[[116552,22934]],[[116790,22617]],[[116973,22545]],[[116444,22536]],[[116931,22515]],[[116496,22490]],[[116453,22449]],[[113301,21439]],[[118726,21604]],[[118709,21486]],[[113210,20816]],[[115482,22082]],[[113171,21585]],[[113199,21590]],[[115232,22102]],[[115739,22373]],[[115134,22184]],[[113056,21175]],[[119573,21271]],[[119957,24020]],[[115859,22356]],[[116561,22649]],[[116285,22746]]]},\"properties\":{\"cp\":[113.280637,23.125178],\"name\":\"广东\",\"childNum\":24}},{\"id\":\"450000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@H TQ§A\"],[\"@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²\"]],\"encodeOffsets\":[[[111707,21520]],[[107619,25527]]]},\"properties\":{\"cp\":[108.320004,22.82402],\"name\":\"广西\",\"childNum\":2}},{\"id\":\"460000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ \"],\"encodeOffsets\":[[112750,20508]]},\"properties\":{\"cp\":[110.33119,20.031971],\"name\":\"海南\",\"childNum\":1}},{\"id\":\"510000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@LqKr\"],[\"@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\\\Z{åû^\"]],\"encodeOffsets\":[[[108815,30935]],[[110617,31811]]]},\"properties\":{\"cp\":[104.065735,30.659462],\"name\":\"四川\",\"childNum\":2}},{\"id\":\"520000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@G\\\\lY£in\"],[\"@@q|mc¯tÏVSÎ\"],[\"@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\\\}G®u\\\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½\"]],\"encodeOffsets\":[[[112158,27383]],[[112105,27474]],[[112095,27476]]]},\"properties\":{\"cp\":[106.713478,26.578343],\"name\":\"贵州\",\"childNum\":3}},{\"id\":\"530000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`\"],\"encodeOffsets\":[[104636,22969]]},\"properties\":{\"cp\":[102.712251,25.040609],\"name\":\"云南\",\"childNum\":1}},{\"id\":\"540000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\\\qRĄ©\"],\"encodeOffsets\":[[90849,37210]]},\"properties\":{\"cp\":[91.132212,29.660361],\"name\":\"西藏\",\"childNum\":1}},{\"id\":\"610000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj\"],\"encodeOffsets\":[[110234,38774]]},\"properties\":{\"cp\":[108.948024,34.263161],\"name\":\"陕西\",\"childNum\":1}},{\"id\":\"620000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@VuUv\"],[\"@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\\\a­Q\\\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\\\h¹¶v·À|\\\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK\"]],\"encodeOffsets\":[[[108619,36299]],[[108589,36341]]]},\"properties\":{\"cp\":[103.823557,36.058039],\"name\":\"甘肃\",\"childNum\":2}},{\"id\":\"630000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@InJm\"],[\"@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\\\ªÚŒU\\\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg\"]],\"encodeOffsets\":[[[105308,37219]],[[95370,40081]]]},\"properties\":{\"cp\":[101.778916,36.623178],\"name\":\"青海\",\"childNum\":2}},{\"id\":\"640000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\\\âÙH\\\\bImlNZ»loqlVmGā§~QCw¤{A\\\\PKNY¯bFkC¥sks_Ã\\\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ\"],[\"@@mfwěwMrŢªv@G\"]],\"encodeOffsets\":[[[109366,40242]],[[108600,36303]]]},\"properties\":{\"cp\":[106.278179,38.46637],\"name\":\"宁夏\",\"childNum\":2}},{\"id\":\"650000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\\\ªÑòÜìc\\\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ\"],\"encodeOffsets\":[[88824,50096]]},\"properties\":{\"cp\":[87.617733,43.792818],\"name\":\"新疆\",\"childNum\":1}},{\"id\":\"110000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\\\¥A¨ÏÑ¨j¯X\\\\¯MKpA³[Hīu}}\"],\"encodeOffsets\":[[120023,41045]]},\"properties\":{\"cp\":[116.405285,39.904989],\"name\":\"北京\",\"childNum\":1}},{\"id\":\"120000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~\"],\"encodeOffsets\":[[120237,41215]]},\"properties\":{\"cp\":[117.190182,39.125596],\"name\":\"天津\",\"childNum\":1}},{\"id\":\"310000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɧư¬EpƸÁxc\"],[\"@@©ª\"],[\"@@MA\"],[\"@@QpİE§ÉC¾\"],[\"@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó\"],[\"@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį\"]],\"encodeOffsets\":[[[124702,32062]],[[124547,32200]],[[124808,31991]],[[124726,32110]],[[124903,32376]],[[124438,32149]]]},\"properties\":{\"cp\":[121.472644,31.231706],\"name\":\"上海\",\"childNum\":6}},{\"id\":\"500000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\\\¨\\\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N\"],[\"@@ifjN@s\"]],\"encodeOffsets\":[[[109628,30765]],[[111725,31320]]]},\"properties\":{\"cp\":[106.504962,29.533155],\"name\":\"重庆\",\"childNum\":2}},{\"id\":\"810000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@AlBk\"],[\"@@mn\"],[\"@@EpFo\"],[\"@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc\"],[\"@@rMUwAS®e\"]],\"encodeOffsets\":[[[117111,23002]],[[117072,22876]],[[117045,22887]],[[116975,23082]],[[116882,22747]]]},\"properties\":{\"cp\":[114.173355,22.320048],\"name\":\"香港\",\"childNum\":5}},{\"id\":\"820000\",\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@kÊd°å§s\"],\"encodeOffsets\":[[116279,22639]]},\"properties\":{\"cp\":[113.54909,22.198951],\"name\":\"澳门\",\"childNum\":1}}],\"UTF8Encoding\":true}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/map/json/china.json\n// module id = tfRt\n// module chunks = 1"],"sourceRoot":""}